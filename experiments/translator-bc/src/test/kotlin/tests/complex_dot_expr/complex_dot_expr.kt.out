@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.complex_dot_expr_MyClass = type { i32 }
define weak void @complex_dot_expr_MyClass_Int(%class.complex_dot_expr_MyClass*  %classvariable.this, i32  %complex_dot_expr_MyClass.i) #0
{
%classvariable.this.addr = alloca %class.complex_dot_expr_MyClass, align 8
%complex_dot_expr_MyClass.i.addr = alloca i32, align 4
store i32 %complex_dot_expr_MyClass.i, i32* %complex_dot_expr_MyClass.i.addr, align 4
%var2 = load i32* %complex_dot_expr_MyClass.i.addr, align 4
%var3 = getelementptr inbounds %class.complex_dot_expr_MyClass* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = bitcast %class.complex_dot_expr_MyClass* %classvariable.this to i8*
%var5 = bitcast %class.complex_dot_expr_MyClass* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @test2_Int(i32  %test2.w) #0
{
%test2.w.addr = alloca i32, align 4
store i32 %test2.w, i32* %test2.w.addr, align 4
%var6 = load i32* %test2.w.addr, align 4
%var8 = call i8* @malloc_heap(i32 4)
%var7 = bitcast i8* %var8 to %class.complex_dot_expr_MyClass*
%var9 = alloca %class.complex_dot_expr_MyClass*, align 8
store %class.complex_dot_expr_MyClass* %var7, %class.complex_dot_expr_MyClass** %var9, align 8
call void @complex_dot_expr_MyClass_Int(%class.complex_dot_expr_MyClass* %var7, i32 %var6)
%var10 = load %class.complex_dot_expr_MyClass** %var9, align 8
%var11 = getelementptr inbounds %class.complex_dot_expr_MyClass* %var10, i32 0, i32 0
%var12 = load i32* %var11, align 4
ret i32 %var12
unreachable
}
define weak void @gen_Int(%class.complex_dot_expr_MyClass**  %instance, i32  %gen.i) #0
{
%gen.i.addr = alloca i32, align 4
store i32 %gen.i, i32* %gen.i.addr, align 4
%var13 = load i32* %gen.i.addr, align 4
%var15 = call i8* @malloc_heap(i32 4)
%var14 = bitcast i8* %var15 to %class.complex_dot_expr_MyClass*
%var16 = alloca %class.complex_dot_expr_MyClass*, align 8
store %class.complex_dot_expr_MyClass* %var14, %class.complex_dot_expr_MyClass** %var16, align 8
call void @complex_dot_expr_MyClass_Int(%class.complex_dot_expr_MyClass* %var14, i32 %var13)
%var17 = load %class.complex_dot_expr_MyClass** %var16, align 8
store %class.complex_dot_expr_MyClass* %var17, %class.complex_dot_expr_MyClass** %instance, align 8
ret void 
unreachable
}
define weak i32 @test1_Int(i32  %test1.q) #0
{
%test1.q.addr = alloca i32, align 4
store i32 %test1.q, i32* %test1.q.addr, align 4
%var18 = load i32* %test1.q.addr, align 4
%var20 = call i8* @malloc_heap(i32 8)
%var19 = bitcast i8* %var20 to %class.complex_dot_expr_MyClass**
call void @gen_Int(%class.complex_dot_expr_MyClass** %var19, i32 %var18)
%var21 = load %class.complex_dot_expr_MyClass** %var19, align 8
%var22 = getelementptr inbounds %class.complex_dot_expr_MyClass* %var21, i32 0, i32 0
%var23 = load i32* %var22, align 4
ret i32 %var23
unreachable
}

