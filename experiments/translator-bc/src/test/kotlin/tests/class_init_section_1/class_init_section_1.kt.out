@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.className = type { i32 }
define weak void @className_Int(%class.className*  %classvariable.this, i32  %className.z) #0
{
%classvariable.this.addr = alloca %class.className, align 8
%className.z.addr = alloca i32, align 4
store i32 %className.z, i32* %className.z.addr, align 4
%var2 = load i32* %className.z.addr, align 4
%var3 = getelementptr inbounds %class.className* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = bitcast %class.className* %classvariable.this to i8*
%var5 = bitcast %class.className* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
%var6 = getelementptr inbounds %class.className* %classvariable.this, i32 0, i32 0
%var7 = getelementptr inbounds %class.className* %classvariable.this, i32 0, i32 0
%var8 = load i32* %var7, align 4
%var9 = add nsw i32 %var8, 12345
%var10 = load i32* %var6, align 4
store i32 %var9, i32* %var6, align 4
ret void 
unreachable
}
define weak i32 @className.getVal(%class.className*  %classvariable.this) #0
{
%var11 = getelementptr inbounds %class.className* %classvariable.this, i32 0, i32 0
%var12 = load i32* %var11, align 4
ret i32 %var12
unreachable
}
define weak i32 @class_init_section_1_Int(i32  %class_init_section_1.x) #0
{
%class_init_section_1.x.addr = alloca i32, align 4
store i32 %class_init_section_1.x, i32* %class_init_section_1.x.addr, align 4
%var13 = load i32* %class_init_section_1.x.addr, align 4
%var15 = call i8* @malloc_heap(i32 4)
%var14 = bitcast i8* %var15 to %class.className*
%var16 = alloca %class.className*, align 8
store %class.className* %var14, %class.className** %var16, align 8
call void @className_Int(%class.className* %var14, i32 %var13)
%managed.unique.0.class_init_section_1.z = alloca %class.className*, align 8
%var17 = load %class.className** %managed.unique.0.class_init_section_1.z, align 8
%var18 = load %class.className** %var16, align 8
store %class.className* %var18, %class.className** %managed.unique.0.class_init_section_1.z, align 8
%var19 = load %class.className** %managed.unique.0.class_init_section_1.z, align 8
%var20 = call i32 @className.getVal(%class.className* %var19)
%var21 = alloca i32, align 4
store i32 %var20, i32* %var21, align 4
%var22 = load i32* %var21, align 4
ret i32 %var22
unreachable
}

