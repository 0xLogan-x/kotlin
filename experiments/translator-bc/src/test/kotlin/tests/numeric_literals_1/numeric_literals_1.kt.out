@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i32 @numeric_literals_1_Int(i32  %numeric_literals_1.x) #0
{
%numeric_literals_1.x.addr = alloca i32, align 4
store i32 %numeric_literals_1.x, i32* %numeric_literals_1.x.addr, align 4
%var2 = load i32* %numeric_literals_1.x.addr, align 4
ret i32 %var2
unreachable
}
define weak i64 @numeric_literals_1_LL() #0
{
%managed.unique.0.numeric_literals_1_LL.k = alloca i64, align 8
%var3 = load i64* %managed.unique.0.numeric_literals_1_LL.k, align 8
store i64 320, i64* %managed.unique.0.numeric_literals_1_LL.k, align 8
%var4 = load i64* %managed.unique.0.numeric_literals_1_LL.k, align 8
ret i64 %var4
unreachable
}
define weak i32 @numeric_literals_1_Binary() #0
{
%managed.unique.1.numeric_literals_1_Binary.k = alloca i32, align 4
%var5 = load i32* %managed.unique.1.numeric_literals_1_Binary.k, align 4
store i32 127, i32* %managed.unique.1.numeric_literals_1_Binary.k, align 4
%var6 = load i32* %managed.unique.1.numeric_literals_1_Binary.k, align 4
ret i32 %var6
unreachable
}

