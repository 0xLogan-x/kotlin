@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.Outer = type {  }
%class.Outer.Nested = type { i32 }
define weak void @Outer(%class.Outer*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.Outer, align 8
%var2 = bitcast %class.Outer* %classvariable.this to i8*
%var3 = bitcast %class.Outer* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var2, i8* %var3, i64 0, i32 4, i1 false)
ret void 
unreachable
}
define weak void @Outer.Nested_Int(%class.Outer.Nested*  %classvariable.this, i32  %Outer.Nested.i) #0
{
%classvariable.this.addr = alloca %class.Outer.Nested, align 8
%Outer.Nested.i.addr = alloca i32, align 4
store i32 %Outer.Nested.i, i32* %Outer.Nested.i.addr, align 4
%var4 = load i32* %Outer.Nested.i.addr, align 4
%var5 = getelementptr inbounds %class.Outer.Nested* %classvariable.this.addr, i32 0, i32 0
store i32 %var4, i32* %var5, align 4
%var6 = bitcast %class.Outer.Nested* %classvariable.this to i8*
%var7 = bitcast %class.Outer.Nested* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var6, i8* %var7, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @Outer.Nested.test(%class.Outer.Nested*  %classvariable.this) #0
{
%var8 = getelementptr inbounds %class.Outer.Nested* %classvariable.this, i32 0, i32 0
%var9 = load i32* %var8, align 4
store i32 5, i32* %var8, align 4
%var10 = getelementptr inbounds %class.Outer.Nested* %classvariable.this, i32 0, i32 0
%var11 = load i32* %var10, align 4
ret i32 %var11
unreachable
}
define weak i32 @nested_test_2_Int(i32  %nested_test_2.k) #0
{
%nested_test_2.k.addr = alloca i32, align 4
store i32 %nested_test_2.k, i32* %nested_test_2.k.addr, align 4
%var12 = load i32* %nested_test_2.k.addr, align 4
%var13 = sub nsw i32 %var12, 1
%var15 = call i8* @malloc_heap(i32 4)
%var14 = bitcast i8* %var15 to %class.Outer.Nested*
%var16 = alloca %class.Outer.Nested*, align 8
store %class.Outer.Nested* %var14, %class.Outer.Nested** %var16, align 8
call void @Outer.Nested_Int(%class.Outer.Nested* %var14, i32 %var13)
%managed.unique.0.nested_test_2.j = alloca %class.Outer.Nested*, align 8
%var17 = load %class.Outer.Nested** %managed.unique.0.nested_test_2.j, align 8
%var18 = load %class.Outer.Nested** %var16, align 8
store %class.Outer.Nested* %var18, %class.Outer.Nested** %managed.unique.0.nested_test_2.j, align 8
%var19 = load %class.Outer.Nested** %managed.unique.0.nested_test_2.j, align 8
%var20 = call i32 @Outer.Nested.test(%class.Outer.Nested* %var19)
%var21 = alloca i32, align 4
store i32 %var20, i32* %var21, align 4
%var22 = load i32* %var21, align 4
ret i32 %var22
unreachable
}
define weak i32 @nested_test_1_Int(i32  %nested_test_1.k) #0
{
%nested_test_1.k.addr = alloca i32, align 4
store i32 %nested_test_1.k, i32* %nested_test_1.k.addr, align 4
%var23 = load i32* %nested_test_1.k.addr, align 4
%var24 = sub nsw i32 %var23, 1
%var26 = call i8* @malloc_heap(i32 4)
%var25 = bitcast i8* %var26 to %class.Outer.Nested*
%var27 = alloca %class.Outer.Nested*, align 8
store %class.Outer.Nested* %var25, %class.Outer.Nested** %var27, align 8
call void @Outer.Nested_Int(%class.Outer.Nested* %var25, i32 %var24)
%managed.unique.1.nested_test_1.j = alloca %class.Outer.Nested*, align 8
%var28 = load %class.Outer.Nested** %managed.unique.1.nested_test_1.j, align 8
%var29 = load %class.Outer.Nested** %var27, align 8
store %class.Outer.Nested* %var29, %class.Outer.Nested** %managed.unique.1.nested_test_1.j, align 8
%var30 = load %class.Outer.Nested** %managed.unique.1.nested_test_1.j, align 8
%var31 = getelementptr inbounds %class.Outer.Nested* %var30, i32 0, i32 0
%var32 = load i32* %var31, align 4
%var33 = load i32* %nested_test_1.k.addr, align 4
store i32 %var33, i32* %var31, align 4
%var34 = load %class.Outer.Nested** %managed.unique.1.nested_test_1.j, align 8
%var35 = getelementptr inbounds %class.Outer.Nested* %var34, i32 0, i32 0
%var36 = load i32* %var35, align 4
ret i32 %var36
unreachable
}

