@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.simple_class_2_MyClass = type { i32, i32 }
define weak void @simple_class_2_MyClass_Int_Int(%class.simple_class_2_MyClass*  %classvariable.this, i32  %simple_class_2_MyClass.b, i32  %simple_class_2_MyClass.c) #0
{
%classvariable.this.addr = alloca %class.simple_class_2_MyClass, align 8
%simple_class_2_MyClass.b.addr = alloca i32, align 4
store i32 %simple_class_2_MyClass.b, i32* %simple_class_2_MyClass.b.addr, align 4
%simple_class_2_MyClass.c.addr = alloca i32, align 4
store i32 %simple_class_2_MyClass.c, i32* %simple_class_2_MyClass.c.addr, align 4
%var2 = load i32* %simple_class_2_MyClass.b.addr, align 4
%var3 = getelementptr inbounds %class.simple_class_2_MyClass* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = load i32* %simple_class_2_MyClass.c.addr, align 4
%var5 = getelementptr inbounds %class.simple_class_2_MyClass* %classvariable.this.addr, i32 0, i32 1
store i32 %var4, i32* %var5, align 4
%var6 = bitcast %class.simple_class_2_MyClass* %classvariable.this to i8*
%var7 = bitcast %class.simple_class_2_MyClass* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var6, i8* %var7, i64 8, i32 4, i1 false)
ret void 
unreachable
}
define weak void @simple_class_2_genMyClass_Int(%class.simple_class_2_MyClass**  %instance, i32  %simple_class_2_genMyClass.i) #0
{
%simple_class_2_genMyClass.i.addr = alloca i32, align 4
store i32 %simple_class_2_genMyClass.i, i32* %simple_class_2_genMyClass.i.addr, align 4
%var8 = load i32* %simple_class_2_genMyClass.i.addr, align 4
%var9 = load i32* %simple_class_2_genMyClass.i.addr, align 4
%var11 = call i8* @malloc_heap(i32 8)
%var10 = bitcast i8* %var11 to %class.simple_class_2_MyClass*
%var12 = alloca %class.simple_class_2_MyClass*, align 8
store %class.simple_class_2_MyClass* %var10, %class.simple_class_2_MyClass** %var12, align 8
call void @simple_class_2_MyClass_Int_Int(%class.simple_class_2_MyClass* %var10, i32 %var8, i32 %var9)
%var13 = load %class.simple_class_2_MyClass** %var12, align 8
store %class.simple_class_2_MyClass* %var13, %class.simple_class_2_MyClass** %instance, align 8
ret void 
unreachable
}
define weak i32 @simple_class_2_change_Int(i32  %simple_class_2_change.x) #0
{
%simple_class_2_change.x.addr = alloca i32, align 4
store i32 %simple_class_2_change.x, i32* %simple_class_2_change.x.addr, align 4
%var14 = load i32* %simple_class_2_change.x.addr, align 4
%var15 = load i32* %simple_class_2_change.x.addr, align 4
%var17 = call i8* @malloc_heap(i32 8)
%var16 = bitcast i8* %var17 to %class.simple_class_2_MyClass*
%var18 = alloca %class.simple_class_2_MyClass*, align 8
store %class.simple_class_2_MyClass* %var16, %class.simple_class_2_MyClass** %var18, align 8
call void @simple_class_2_MyClass_Int_Int(%class.simple_class_2_MyClass* %var16, i32 %var14, i32 %var15)
%managed.unique.0.simple_class_2_change.y = alloca %class.simple_class_2_MyClass*, align 8
%var19 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var20 = load %class.simple_class_2_MyClass** %var18, align 8
store %class.simple_class_2_MyClass* %var20, %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var21 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var22 = getelementptr inbounds %class.simple_class_2_MyClass* %var21, i32 0, i32 1
%var23 = load i32* %var22, align 4
%var24 = load i32* %simple_class_2_change.x.addr, align 4
store i32 %var24, i32* %var22, align 4
%var25 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var26 = getelementptr inbounds %class.simple_class_2_MyClass* %var25, i32 0, i32 1
%var27 = load i32* %var26, align 4
%var28 = load i32* %simple_class_2_change.x.addr, align 4
store i32 %var28, i32* %var26, align 4
%var29 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var30 = getelementptr inbounds %class.simple_class_2_MyClass* %var29, i32 0, i32 1
%var31 = load i32* %var30, align 4
store i32 1, i32* %var30, align 4
%var32 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var33 = getelementptr inbounds %class.simple_class_2_MyClass* %var32, i32 0, i32 1
%var34 = load i32* %simple_class_2_change.x.addr, align 4
%var35 = add nsw i32 %var34, 1
%var36 = load i32* %var33, align 4
store i32 %var35, i32* %var33, align 4
%var37 = load %class.simple_class_2_MyClass** %managed.unique.0.simple_class_2_change.y, align 8
%var38 = getelementptr inbounds %class.simple_class_2_MyClass* %var37, i32 0, i32 1
%var39 = load i32* %var38, align 4
ret i32 %var39
unreachable
}
define weak i32 @simple_class_2_testGen_Int(i32  %simple_class_2_testGen.i) #0
{
%simple_class_2_testGen.i.addr = alloca i32, align 4
store i32 %simple_class_2_testGen.i, i32* %simple_class_2_testGen.i.addr, align 4
%var40 = load i32* %simple_class_2_testGen.i.addr, align 4
%var42 = call i8* @malloc_heap(i32 8)
%var41 = bitcast i8* %var42 to %class.simple_class_2_MyClass**
call void @simple_class_2_genMyClass_Int(%class.simple_class_2_MyClass** %var41, i32 %var40)
%managed.unique.1.simple_class_2_testGen.j = alloca %class.simple_class_2_MyClass*, align 8
%var43 = load %class.simple_class_2_MyClass** %managed.unique.1.simple_class_2_testGen.j, align 8
%var44 = load %class.simple_class_2_MyClass** %var41, align 8
store %class.simple_class_2_MyClass* %var44, %class.simple_class_2_MyClass** %managed.unique.1.simple_class_2_testGen.j, align 8
%var45 = load %class.simple_class_2_MyClass** %managed.unique.1.simple_class_2_testGen.j, align 8
%var46 = getelementptr inbounds %class.simple_class_2_MyClass* %var45, i32 0, i32 0
%var47 = load i32* %var46, align 4
ret i32 %var47
unreachable
}

