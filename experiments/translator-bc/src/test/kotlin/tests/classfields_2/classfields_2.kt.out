@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.classfields_2_class = type { i32 }
define weak void @classfields_2_class(%class.classfields_2_class*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.classfields_2_class, align 8
%var2 = getelementptr inbounds %class.classfields_2_class* %classvariable.this.addr, i32 0, i32 0
%var3 = load i32* %var2, align 4
store i32 0, i32* %var2, align 4
%var4 = bitcast %class.classfields_2_class* %classvariable.this to i8*
%var5 = bitcast %class.classfields_2_class* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak void @classfields_2_class.method(%class.classfields_2_class*  %classvariable.this) #0
{
%var6 = getelementptr inbounds %class.classfields_2_class* %classvariable.this, i32 0, i32 0
%var7 = load i32* %var6, align 4
store i32 5, i32* %var6, align 4
ret void 
unreachable
}
define weak i32 @classfields_2_class.changeI(%class.classfields_2_class*  %classvariable.this) #0
{
call void @classfields_2_class.method(%class.classfields_2_class* %classvariable.this)
%var8 = getelementptr inbounds %class.classfields_2_class* %classvariable.this, i32 0, i32 0
%var9 = load i32* %var8, align 4
ret i32 %var9
unreachable
}
define weak i32 @test2() #0
{
%var11 = call i8* @malloc_heap(i32 4)
%var10 = bitcast i8* %var11 to %class.classfields_2_class*
%var12 = alloca %class.classfields_2_class*, align 8
store %class.classfields_2_class* %var10, %class.classfields_2_class** %var12, align 8
call void @classfields_2_class(%class.classfields_2_class* %var10)
%managed.unique.0.test2.main = alloca %class.classfields_2_class*, align 8
%var13 = load %class.classfields_2_class** %managed.unique.0.test2.main, align 8
%var14 = load %class.classfields_2_class** %var12, align 8
store %class.classfields_2_class* %var14, %class.classfields_2_class** %managed.unique.0.test2.main, align 8
%var15 = load %class.classfields_2_class** %managed.unique.0.test2.main, align 8
%var16 = getelementptr inbounds %class.classfields_2_class* %var15, i32 0, i32 0
%var17 = load i32* %var16, align 4
ret i32 %var17
unreachable
}
define weak i32 @test3() #0
{
%var19 = call i8* @malloc_heap(i32 4)
%var18 = bitcast i8* %var19 to %class.classfields_2_class*
%var20 = alloca %class.classfields_2_class*, align 8
store %class.classfields_2_class* %var18, %class.classfields_2_class** %var20, align 8
call void @classfields_2_class(%class.classfields_2_class* %var18)
%var21 = load %class.classfields_2_class** %var20, align 8
%var22 = call i32 @classfields_2_class.changeI(%class.classfields_2_class* %var21)
%var23 = alloca i32, align 4
store i32 %var22, i32* %var23, align 4
%var24 = load i32* %var23, align 4
ret i32 %var24
unreachable
}
define weak i32 @test1() #0
{
%var26 = call i8* @malloc_heap(i32 4)
%var25 = bitcast i8* %var26 to %class.classfields_2_class*
%var27 = alloca %class.classfields_2_class*, align 8
store %class.classfields_2_class* %var25, %class.classfields_2_class** %var27, align 8
call void @classfields_2_class(%class.classfields_2_class* %var25)
%managed.unique.1.test1.main = alloca %class.classfields_2_class*, align 8
%var28 = load %class.classfields_2_class** %managed.unique.1.test1.main, align 8
%var29 = load %class.classfields_2_class** %var27, align 8
store %class.classfields_2_class* %var29, %class.classfields_2_class** %managed.unique.1.test1.main, align 8
%var30 = load %class.classfields_2_class** %managed.unique.1.test1.main, align 8
%var31 = call i32 @classfields_2_class.changeI(%class.classfields_2_class* %var30)
%var32 = alloca i32, align 4
store i32 %var31, i32* %var32, align 4
%var33 = load i32* %var32, align 4
ret i32 %var33
unreachable
}

