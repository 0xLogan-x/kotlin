@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.declaration_test_1_cls = type {  }
define weak void @declaration_test_1_cls(%class.declaration_test_1_cls*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.declaration_test_1_cls, align 8
%var2 = bitcast %class.declaration_test_1_cls* %classvariable.this to i8*
%var3 = bitcast %class.declaration_test_1_cls* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var2, i8* %var3, i64 0, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @declaration_test_1_variable() #0
{
%managed.unique.0.declaration_test_1_variable.a = alloca i32, align 4
%var4 = load i32* %managed.unique.0.declaration_test_1_variable.a, align 4
store i32 85, i32* %managed.unique.0.declaration_test_1_variable.a, align 4
%var5 = load i32* %managed.unique.0.declaration_test_1_variable.a, align 4
ret i32 %var5
unreachable
}
define weak void @declaration_test_1_class_slave(%class.declaration_test_1_cls**  %instance) #0
{
%managed.unique.1.declaration_test_1_class_slave.a = alloca %class.declaration_test_1_cls*, align 8
%var7 = call i8* @malloc_heap(i32 0)
%var6 = bitcast i8* %var7 to %class.declaration_test_1_cls*
%var8 = alloca %class.declaration_test_1_cls*, align 8
store %class.declaration_test_1_cls* %var6, %class.declaration_test_1_cls** %var8, align 8
call void @declaration_test_1_cls(%class.declaration_test_1_cls* %var6)
%var9 = load %class.declaration_test_1_cls** %managed.unique.1.declaration_test_1_class_slave.a, align 8
%var10 = load %class.declaration_test_1_cls** %var8, align 8
store %class.declaration_test_1_cls* %var10, %class.declaration_test_1_cls** %managed.unique.1.declaration_test_1_class_slave.a, align 8
%var11 = load %class.declaration_test_1_cls** %managed.unique.1.declaration_test_1_class_slave.a, align 8
store %class.declaration_test_1_cls* %var11, %class.declaration_test_1_cls** %instance, align 8
ret void 
unreachable
}
define weak i32 @declaration_test_1_class() #0
{
%var13 = call i8* @malloc_heap(i32 8)
%var12 = bitcast i8* %var13 to %class.declaration_test_1_cls**
call void @declaration_test_1_class_slave(%class.declaration_test_1_cls** %var12)
%var14 = load %class.declaration_test_1_cls** %var12, align 8
%var15 = load %class.declaration_test_1_cls** %var12, align 8
%var16 = icmp eq %class.declaration_test_1_cls* %var15, null
%var17 = alloca i32, align 4
br i1 %var16, label %label.if_then.1, label %label.if_else.2
label.if_then.1:
store i32 10, i32* %var17, align 4
br label %label.if_end.3
label.if_else.2:
store i32 96799, i32* %var17, align 4
br label %label.if_end.3
label.if_end.3:
%var18 = load i32* %var17, align 4
ret i32 %var18
unreachable
}

