@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.function_default_arguments_1_argClass = type { i32 }
define weak void @function_default_arguments_1_argClass_Int(%class.function_default_arguments_1_argClass*  %classvariable.this, i32  %function_default_arguments_1_argClass.classArgument) #0
{
%classvariable.this.addr = alloca %class.function_default_arguments_1_argClass, align 8
%function_default_arguments_1_argClass.classArgument.addr = alloca i32, align 4
store i32 %function_default_arguments_1_argClass.classArgument, i32* %function_default_arguments_1_argClass.classArgument.addr, align 4
%var2 = load i32* %function_default_arguments_1_argClass.classArgument.addr, align 4
%var3 = getelementptr inbounds %class.function_default_arguments_1_argClass* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = bitcast %class.function_default_arguments_1_argClass* %classvariable.this to i8*
%var5 = bitcast %class.function_default_arguments_1_argClass* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @function_default_arguments_1_add_class_Int_Ref_function_default_arguments_1_argClass_Int_Int(i32  %function_default_arguments_1_add_class.x, %class.function_default_arguments_1_argClass*  %function_default_arguments_1_add_class.t, i32  %function_default_arguments_1_add_class.y, i32  %function_default_arguments_1_add_class.z) #0
{
%function_default_arguments_1_add_class.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add_class.x, i32* %function_default_arguments_1_add_class.x.addr, align 4
%function_default_arguments_1_add_class.y.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add_class.y, i32* %function_default_arguments_1_add_class.y.addr, align 4
%function_default_arguments_1_add_class.z.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add_class.z, i32* %function_default_arguments_1_add_class.z.addr, align 4
%var6 = getelementptr inbounds %class.function_default_arguments_1_argClass* %function_default_arguments_1_add_class.t, i32 0, i32 0
%var7 = load i32* %function_default_arguments_1_add_class.x.addr, align 4
%var8 = load i32* %var6, align 4
%var9 = add nsw i32 %var7, %var8
ret i32 %var9
unreachable
}
define weak i32 @function_default_arguments_1_last_present_Int(i32  %function_default_arguments_1_last_present.x) #0
{
%function_default_arguments_1_last_present.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_last_present.x, i32* %function_default_arguments_1_last_present.x.addr, align 4
%var10 = load i32* %function_default_arguments_1_last_present.x.addr, align 4
%var11 = call i32 @function_default_arguments_1_last_missed_fun_Int_Int(i32 %var10, i32 29)
%var12 = alloca i32, align 4
store i32 %var11, i32* %var12, align 4
%var13 = load i32* %var12, align 4
ret i32 %var13
unreachable
}
define weak i32 @function_default_arguments_1_last_missed_Int(i32  %function_default_arguments_1_last_missed.x) #0
{
%function_default_arguments_1_last_missed.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_last_missed.x, i32* %function_default_arguments_1_last_missed.x.addr, align 4
%var14 = load i32* %function_default_arguments_1_last_missed.x.addr, align 4
%var15 = call i32 @function_default_arguments_1_last_missed_fun_Int_Int(i32 %var14, i32 954)
%var16 = alloca i32, align 4
store i32 %var15, i32* %var16, align 4
%var17 = load i32* %var16, align 4
ret i32 %var17
unreachable
}
define weak i32 @function_default_arguments_1_position_fun_Int_Int_Int(i32  %function_default_arguments_1_position_fun.first, i32  %function_default_arguments_1_position_fun.second, i32  %function_default_arguments_1_position_fun.third) #0
{
%function_default_arguments_1_position_fun.first.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_fun.first, i32* %function_default_arguments_1_position_fun.first.addr, align 4
%function_default_arguments_1_position_fun.second.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_fun.second, i32* %function_default_arguments_1_position_fun.second.addr, align 4
%function_default_arguments_1_position_fun.third.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_fun.third, i32* %function_default_arguments_1_position_fun.third.addr, align 4
%var18 = load i32* %function_default_arguments_1_position_fun.second.addr, align 4
%var19 = mul nsw i32 2, %var18
%var20 = load i32* %function_default_arguments_1_position_fun.first.addr, align 4
%var21 = add nsw i32 %var20, %var19
%var22 = load i32* %function_default_arguments_1_position_fun.third.addr, align 4
%var23 = mul nsw i32 3, %var22
%var24 = add nsw i32 %var21, %var23
ret i32 %var24
unreachable
}
define weak i32 @function_default_arguments_1_position_all_right_order_Int(i32  %function_default_arguments_1_position_all_right_order.x) #0
{
%function_default_arguments_1_position_all_right_order.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_all_right_order.x, i32* %function_default_arguments_1_position_all_right_order.x.addr, align 4
%var25 = load i32* %function_default_arguments_1_position_all_right_order.x.addr, align 4
%var26 = call i32 @function_default_arguments_1_position_fun_Int_Int_Int(i32 11, i32 32, i32 %var25)
%var27 = alloca i32, align 4
store i32 %var26, i32* %var27, align 4
%var28 = load i32* %var27, align 4
ret i32 %var28
unreachable
}
define weak i32 @function_default_arguments_1_add_class_arg() #0
{
%var30 = call i8* @malloc_heap(i32 4)
%var29 = bitcast i8* %var30 to %class.function_default_arguments_1_argClass*
%var31 = alloca %class.function_default_arguments_1_argClass*, align 8
store %class.function_default_arguments_1_argClass* %var29, %class.function_default_arguments_1_argClass** %var31, align 8
call void @function_default_arguments_1_argClass_Int(%class.function_default_arguments_1_argClass* %var29, i32 124)
%var32 = load %class.function_default_arguments_1_argClass** %var31, align 8
%var33 = call i32 @function_default_arguments_1_add_class_Int_Ref_function_default_arguments_1_argClass_Int_Int(i32 190, %class.function_default_arguments_1_argClass* %var32, i32 53, i32 777)
%var34 = alloca i32, align 4
store i32 %var33, i32* %var34, align 4
%var35 = load i32* %var34, align 4
ret i32 %var35
unreachable
}
define weak i32 @function_default_arguments_1_last_missed_fun_Int_Int(i32  %function_default_arguments_1_last_missed_fun.z, i32  %function_default_arguments_1_last_missed_fun.u) #0
{
%function_default_arguments_1_last_missed_fun.z.addr = alloca i32, align 4
store i32 %function_default_arguments_1_last_missed_fun.z, i32* %function_default_arguments_1_last_missed_fun.z.addr, align 4
%function_default_arguments_1_last_missed_fun.u.addr = alloca i32, align 4
store i32 %function_default_arguments_1_last_missed_fun.u, i32* %function_default_arguments_1_last_missed_fun.u.addr, align 4
%var36 = load i32* %function_default_arguments_1_last_missed_fun.z.addr, align 4
%var37 = load i32* %function_default_arguments_1_last_missed_fun.u.addr, align 4
%var38 = add nsw i32 %var36, %var37
ret i32 %var38
unreachable
}
define weak i32 @function_default_arguments_1_position_all_default_Int(i32  %function_default_arguments_1_position_all_default.x) #0
{
%function_default_arguments_1_position_all_default.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_all_default.x, i32* %function_default_arguments_1_position_all_default.x.addr, align 4
%var39 = load i32* %function_default_arguments_1_position_all_default.x.addr, align 4
%var40 = call i32 @function_default_arguments_1_position_fun_Int_Int_Int(i32 %var39, i32 324, i32 2531)
%var41 = alloca i32, align 4
store i32 %var40, i32* %var41, align 4
%var42 = load i32* %var41, align 4
ret i32 %var42
unreachable
}
define weak i32 @function_default_arguments_1_all_position() #0
{
%var43 = call i32 @function_default_arguments_1_all_position_fun_Int_Int_Int(i32 31, i32 32, i32 33)
%var44 = alloca i32, align 4
store i32 %var43, i32* %var44, align 4
%var45 = load i32* %var44, align 4
ret i32 %var45
unreachable
}
define weak i32 @function_default_arguments_1_add_Int_Ref_function_default_arguments_1_argClass_Int_Int(i32  %function_default_arguments_1_add.x, %class.function_default_arguments_1_argClass*  %function_default_arguments_1_add.t, i32  %function_default_arguments_1_add.y, i32  %function_default_arguments_1_add.z) #0
{
%function_default_arguments_1_add.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add.x, i32* %function_default_arguments_1_add.x.addr, align 4
%function_default_arguments_1_add.y.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add.y, i32* %function_default_arguments_1_add.y.addr, align 4
%function_default_arguments_1_add.z.addr = alloca i32, align 4
store i32 %function_default_arguments_1_add.z, i32* %function_default_arguments_1_add.z.addr, align 4
%var46 = load i32* %function_default_arguments_1_add.x.addr, align 4
%var47 = load i32* %function_default_arguments_1_add.y.addr, align 4
%var48 = add nsw i32 %var46, %var47
ret i32 %var48
unreachable
}
define weak i32 @function_default_arguments_1_all_position_fun_Int_Int_Int(i32  %function_default_arguments_1_all_position_fun.first, i32  %function_default_arguments_1_all_position_fun.second, i32  %function_default_arguments_1_all_position_fun.third) #0
{
%function_default_arguments_1_all_position_fun.first.addr = alloca i32, align 4
store i32 %function_default_arguments_1_all_position_fun.first, i32* %function_default_arguments_1_all_position_fun.first.addr, align 4
%function_default_arguments_1_all_position_fun.second.addr = alloca i32, align 4
store i32 %function_default_arguments_1_all_position_fun.second, i32* %function_default_arguments_1_all_position_fun.second.addr, align 4
%function_default_arguments_1_all_position_fun.third.addr = alloca i32, align 4
store i32 %function_default_arguments_1_all_position_fun.third, i32* %function_default_arguments_1_all_position_fun.third.addr, align 4
%var49 = load i32* %function_default_arguments_1_all_position_fun.second.addr, align 4
%var50 = mul nsw i32 2, %var49
%var51 = load i32* %function_default_arguments_1_all_position_fun.first.addr, align 4
%var52 = add nsw i32 %var51, %var50
%var53 = load i32* %function_default_arguments_1_all_position_fun.third.addr, align 4
%var54 = mul nsw i32 3, %var53
%var55 = add nsw i32 %var52, %var54
ret i32 %var55
unreachable
}
define weak i32 @function_default_arguments_1_position_third_only_Int(i32  %function_default_arguments_1_position_third_only.x) #0
{
%function_default_arguments_1_position_third_only.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_third_only.x, i32* %function_default_arguments_1_position_third_only.x.addr, align 4
%var56 = load i32* %function_default_arguments_1_position_third_only.x.addr, align 4
%var57 = call i32 @function_default_arguments_1_position_fun_Int_Int_Int(i32 11, i32 324, i32 %var56)
%var58 = alloca i32, align 4
store i32 %var57, i32* %var58, align 4
%var59 = load i32* %var58, align 4
ret i32 %var59
unreachable
}
define weak i32 @function_default_arguments_1_mixed() #0
{
%var61 = call i8* @malloc_heap(i32 4)
%var60 = bitcast i8* %var61 to %class.function_default_arguments_1_argClass*
%var62 = alloca %class.function_default_arguments_1_argClass*, align 8
store %class.function_default_arguments_1_argClass* %var60, %class.function_default_arguments_1_argClass** %var62, align 8
call void @function_default_arguments_1_argClass_Int(%class.function_default_arguments_1_argClass* %var60, i32 29)
%var64 = call i8* @malloc_heap(i32 4)
%var63 = bitcast i8* %var64 to %class.function_default_arguments_1_argClass*
%var65 = alloca %class.function_default_arguments_1_argClass*, align 8
store %class.function_default_arguments_1_argClass* %var63, %class.function_default_arguments_1_argClass** %var65, align 8
call void @function_default_arguments_1_argClass_Int(%class.function_default_arguments_1_argClass* %var63, i32 29)
%var66 = load %class.function_default_arguments_1_argClass** %var65, align 8
%var67 = call i32 @function_default_arguments_1_add_Int_Ref_function_default_arguments_1_argClass_Int_Int(i32 23, %class.function_default_arguments_1_argClass* %var66, i32 53, i32 8)
%var68 = alloca i32, align 4
store i32 %var67, i32* %var68, align 4
%var69 = load i32* %var68, align 4
ret i32 %var69
unreachable
}
define weak i32 @function_default_arguments_1_position_all_reverse_Int(i32  %function_default_arguments_1_position_all_reverse.x) #0
{
%function_default_arguments_1_position_all_reverse.x.addr = alloca i32, align 4
store i32 %function_default_arguments_1_position_all_reverse.x, i32* %function_default_arguments_1_position_all_reverse.x.addr, align 4
%var70 = load i32* %function_default_arguments_1_position_all_reverse.x.addr, align 4
%var71 = call i32 @function_default_arguments_1_position_fun_Int_Int_Int(i32 11, i32 32, i32 %var70)
%var72 = alloca i32, align 4
store i32 %var71, i32* %var72, align 4
%var73 = load i32* %var72, align 4
ret i32 %var73
unreachable
}

