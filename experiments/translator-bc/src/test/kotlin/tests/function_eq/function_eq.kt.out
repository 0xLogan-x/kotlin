@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.function_eq_MyClass = type { i32 }
define weak void @function_eq_MyClass_Int(%class.function_eq_MyClass*  %classvariable.this, i32  %function_eq_MyClass.i) #0
{
%classvariable.this.addr = alloca %class.function_eq_MyClass, align 8
%function_eq_MyClass.i.addr = alloca i32, align 4
store i32 %function_eq_MyClass.i, i32* %function_eq_MyClass.i.addr, align 4
%var2 = load i32* %function_eq_MyClass.i.addr, align 4
%var3 = getelementptr inbounds %class.function_eq_MyClass* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = bitcast %class.function_eq_MyClass* %classvariable.this to i8*
%var5 = bitcast %class.function_eq_MyClass* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @function_eq_dinc_Int(i32  %function_eq_dinc.i) #0
{
%function_eq_dinc.i.addr = alloca i32, align 4
store i32 %function_eq_dinc.i, i32* %function_eq_dinc.i.addr, align 4
%var6 = load i32* %function_eq_dinc.i.addr, align 4
%var7 = call i32 @function_eq_inc_Int(i32 %var6)
%var8 = alloca i32, align 4
store i32 %var7, i32* %var8, align 4
%var9 = load i32* %function_eq_dinc.i.addr, align 4
%var10 = call i32 @function_eq_inc_Int(i32 %var9)
%var11 = alloca i32, align 4
store i32 %var10, i32* %var11, align 4
%var12 = load i32* %var11, align 4
%var13 = call i32 @function_eq_inc_Int(i32 %var12)
%var14 = alloca i32, align 4
store i32 %var13, i32* %var14, align 4
%var15 = load i32* %var14, align 4
ret i32 %var15
unreachable
}
define weak void @function_eq_gen(%class.function_eq_MyClass**  %instance) #0
{
%var17 = call i8* @malloc_heap(i32 4)
%var16 = bitcast i8* %var17 to %class.function_eq_MyClass*
%var18 = alloca %class.function_eq_MyClass*, align 8
store %class.function_eq_MyClass* %var16, %class.function_eq_MyClass** %var18, align 8
call void @function_eq_MyClass_Int(%class.function_eq_MyClass* %var16, i32 1)
%var19 = load %class.function_eq_MyClass** %var18, align 8
store %class.function_eq_MyClass* %var19, %class.function_eq_MyClass** %instance, align 8
ret void 
unreachable
}
define weak i32 @function_eq_sum_Int_Int(i32  %function_eq_sum.i, i32  %function_eq_sum.j) #0
{
%function_eq_sum.i.addr = alloca i32, align 4
store i32 %function_eq_sum.i, i32* %function_eq_sum.i.addr, align 4
%function_eq_sum.j.addr = alloca i32, align 4
store i32 %function_eq_sum.j, i32* %function_eq_sum.j.addr, align 4
%var20 = load i32* %function_eq_sum.i.addr, align 4
%var21 = load i32* %function_eq_sum.j.addr, align 4
%var22 = add nsw i32 %var20, %var21
ret i32 %var22
unreachable
}
define weak i32 @function_eq_inc_Int(i32  %function_eq_inc.i) #0
{
%function_eq_inc.i.addr = alloca i32, align 4
store i32 %function_eq_inc.i, i32* %function_eq_inc.i.addr, align 4
%var23 = load i32* %function_eq_inc.i.addr, align 4
%var24 = add nsw i32 %var23, 1
ret i32 %var24
unreachable
}

