@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i32 @if_without_else_2_Int(i32  %if_without_else_2.x) #0
{
%if_without_else_2.x.addr = alloca i32, align 4
store i32 %if_without_else_2.x, i32* %if_without_else_2.x.addr, align 4
%managed.unique.0.if_without_else_2.res = alloca i32, align 4
%var2 = load i32* %managed.unique.0.if_without_else_2.res, align 4
store i32 1256, i32* %managed.unique.0.if_without_else_2.res, align 4
%var3 = load i32* %if_without_else_2.x.addr, align 4
%var4 = icmp sgt i32 %var3, 10
br i1 %var4, label %label.if.1, label %label.if.3
label.if.1:
%var5 = load i32* %managed.unique.0.if_without_else_2.res, align 4
%var6 = add nsw i32 %var5, 64
%var7 = load i32* %managed.unique.0.if_without_else_2.res, align 4
store i32 %var6, i32* %managed.unique.0.if_without_else_2.res, align 4
br label %label.if.3
label.if.3:
%var8 = load i32* %managed.unique.0.if_without_else_2.res, align 4
ret i32 %var8
unreachable
}

