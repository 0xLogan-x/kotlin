@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.class_reassignment_2_Node = type { %class.class_reassignment_2_Node*, %class.class_reassignment_2_Node*, i32 }
define weak void @class_reassignment_2_Node(%class.class_reassignment_2_Node*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.class_reassignment_2_Node, align 8
%var2 = getelementptr inbounds %class.class_reassignment_2_Node* %classvariable.this.addr, i32 0, i32 0
%var3 = load %class.class_reassignment_2_Node** %var2, align 8
store %class.class_reassignment_2_Node* null, %class.class_reassignment_2_Node** %var2, align 8
%var4 = getelementptr inbounds %class.class_reassignment_2_Node* %classvariable.this.addr, i32 0, i32 1
%var5 = load %class.class_reassignment_2_Node** %var4, align 8
store %class.class_reassignment_2_Node* null, %class.class_reassignment_2_Node** %var4, align 8
%var6 = getelementptr inbounds %class.class_reassignment_2_Node* %classvariable.this.addr, i32 0, i32 2
%var7 = load i32* %var6, align 4
store i32 0, i32* %var6, align 4
%var8 = bitcast %class.class_reassignment_2_Node* %classvariable.this to i8*
%var9 = bitcast %class.class_reassignment_2_Node* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var8, i8* %var9, i64 24, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @class_reassignment_2() #0
{
%var11 = call i8* @malloc_heap(i32 24)
%var10 = bitcast i8* %var11 to %class.class_reassignment_2_Node*
%var12 = alloca %class.class_reassignment_2_Node*, align 8
store %class.class_reassignment_2_Node* %var10, %class.class_reassignment_2_Node** %var12, align 8
call void @class_reassignment_2_Node(%class.class_reassignment_2_Node* %var10)
%managed.unique.0.class_reassignment_2.root = alloca %class.class_reassignment_2_Node*, align 8
%var13 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var14 = load %class.class_reassignment_2_Node** %var12, align 8
store %class.class_reassignment_2_Node* %var14, %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var15 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var16 = getelementptr inbounds %class.class_reassignment_2_Node* %var15, i32 0, i32 2
%var17 = load i32* %var16, align 4
store i32 12, i32* %var16, align 4
%var18 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var19 = getelementptr inbounds %class.class_reassignment_2_Node* %var18, i32 0, i32 0
%var21 = call i8* @malloc_heap(i32 24)
%var20 = bitcast i8* %var21 to %class.class_reassignment_2_Node*
%var22 = alloca %class.class_reassignment_2_Node*, align 8
store %class.class_reassignment_2_Node* %var20, %class.class_reassignment_2_Node** %var22, align 8
call void @class_reassignment_2_Node(%class.class_reassignment_2_Node* %var20)
%var23 = load %class.class_reassignment_2_Node** %var19, align 8
%var24 = load %class.class_reassignment_2_Node** %var22, align 8
store %class.class_reassignment_2_Node* %var24, %class.class_reassignment_2_Node** %var19, align 8
%managed.unique.1.class_reassignment_2.current = alloca %class.class_reassignment_2_Node*, align 8
%var25 = load %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var26 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
store %class.class_reassignment_2_Node* %var26, %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var27 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var28 = getelementptr inbounds %class.class_reassignment_2_Node* %var27, i32 0, i32 0
%var29 = load %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var30 = load %class.class_reassignment_2_Node** %var28, align 8
store %class.class_reassignment_2_Node* %var30, %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var32 = load %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var31 = icmp eq %class.class_reassignment_2_Node* null, %var32
br i1 %var31, label %label.nullCheck.1, label %label.nullCheck.2
label.nullCheck.1:
%var33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @exceptions.str.1, i32 0, i32 0))
call void @abort()
br label %label.nullCheck.2
label.nullCheck.2:
%var34 = load %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var35 = getelementptr inbounds %class.class_reassignment_2_Node* %var34, i32 0, i32 2
%var36 = load i32* %var35, align 4
store i32 10593, i32* %var35, align 4
%var37 = load %class.class_reassignment_2_Node** %managed.unique.1.class_reassignment_2.current, align 8
%var38 = getelementptr inbounds %class.class_reassignment_2_Node* %var37, i32 0, i32 2
%var39 = load %class.class_reassignment_2_Node** %managed.unique.0.class_reassignment_2.root, align 8
%var40 = getelementptr inbounds %class.class_reassignment_2_Node* %var39, i32 0, i32 2
%var41 = load i32* %var38, align 4
%var42 = load i32* %var40, align 4
%var43 = add nsw i32 %var41, %var42
ret i32 %var43
unreachable
}

