@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i1 @when_block_test1_Int(i32  %when_block_test1.i) #0
{
%when_block_test1.i.addr = alloca i32, align 4
store i32 %when_block_test1.i, i32* %when_block_test1.i.addr, align 4
; start when expression
br label %label.when_start.1
label.when_start.1:
br label %label.when_condition_condition.5
label.when_condition_condition.5:
%var3 = load i32* %when_block_test1.i.addr, align 4
%var4 = icmp eq i32 %var3, 0
br i1 %var4, label %label.when_condition_success.4, label %label.when_condition_condition.6
label.when_condition_condition.6:
br label %label.when_item.3
label.when_condition_success.4:
ret i1 1
br label %label.when_end.2
label.when_item.3:
br label %label.when_condition_condition.9
label.when_condition_condition.9:
%var5 = load i32* %when_block_test1.i.addr, align 4
%var6 = icmp eq i32 %var5, 1
br i1 %var6, label %label.when_condition_success.8, label %label.when_condition_condition.10
label.when_condition_condition.10:
br label %label.when_item.7
label.when_condition_success.8:
ret i1 0
br label %label.when_end.2
label.when_item.7:
br label %label.when_end.2
label.when_end.2:
ret i1 0
unreachable
}

