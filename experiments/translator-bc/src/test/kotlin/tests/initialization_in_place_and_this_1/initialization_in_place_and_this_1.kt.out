@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.initialization_in_place_and_this_1_slave_1 = type { i32 }
%class.initialization_in_place_and_this_1_slave_2 = type { %class.initialization_in_place_and_this_1_slave_1*, i32, i32 }
%class.initialization_in_place_and_this_1_master = type { %class.initialization_in_place_and_this_1_slave_1*, %class.initialization_in_place_and_this_1_slave_2* }
define weak void @initialization_in_place_and_this_1_slave_1_Int(%class.initialization_in_place_and_this_1_slave_1*  %classvariable.this, i32  %initialization_in_place_and_this_1_slave_1.size) #0
{
%classvariable.this.addr = alloca %class.initialization_in_place_and_this_1_slave_1, align 8
%initialization_in_place_and_this_1_slave_1.size.addr = alloca i32, align 4
store i32 %initialization_in_place_and_this_1_slave_1.size, i32* %initialization_in_place_and_this_1_slave_1.size.addr, align 4
%var2 = load i32* %initialization_in_place_and_this_1_slave_1.size.addr, align 4
%var3 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_1* %classvariable.this.addr, i32 0, i32 0
store i32 %var2, i32* %var3, align 4
%var4 = bitcast %class.initialization_in_place_and_this_1_slave_1* %classvariable.this to i8*
%var5 = bitcast %class.initialization_in_place_and_this_1_slave_1* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var4, i8* %var5, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak void @initialization_in_place_and_this_1_slave_2_Ref_initialization_in_place_and_this_1_slave_1(%class.initialization_in_place_and_this_1_slave_2*  %classvariable.this, %class.initialization_in_place_and_this_1_slave_1*  %initialization_in_place_and_this_1_slave_2.buffer) #0
{
%classvariable.this.addr = alloca %class.initialization_in_place_and_this_1_slave_2, align 8
%var6 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_2* %classvariable.this.addr, i32 0, i32 0
store %class.initialization_in_place_and_this_1_slave_1* %initialization_in_place_and_this_1_slave_2.buffer, %class.initialization_in_place_and_this_1_slave_1** %var6, align 8
%var7 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_2* %classvariable.this.addr, i32 0, i32 1
%var8 = load i32* %var7, align 4
store i32 897, i32* %var7, align 4
%var9 = bitcast %class.initialization_in_place_and_this_1_slave_2* %classvariable.this to i8*
%var10 = bitcast %class.initialization_in_place_and_this_1_slave_2* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var9, i8* %var10, i64 16, i32 4, i1 false)
%var11 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_2* %classvariable.this, i32 0, i32 2
%var12 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_2* %classvariable.this, i32 0, i32 0
%var13 = load %class.initialization_in_place_and_this_1_slave_1** %var12, align 8
%var14 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_1* %var13, i32 0, i32 0
%var15 = load i32* %var11, align 4
%var16 = load i32* %var14, align 4
store i32 %var16, i32* %var11, align 4
ret void 
unreachable
}
define weak void @initialization_in_place_and_this_1_master_Ref_initialization_in_place_and_this_1_slave_1(%class.initialization_in_place_and_this_1_master*  %classvariable.this, %class.initialization_in_place_and_this_1_slave_1*  %initialization_in_place_and_this_1_master.buffer) #0
{
%classvariable.this.addr = alloca %class.initialization_in_place_and_this_1_master, align 8
%var17 = getelementptr inbounds %class.initialization_in_place_and_this_1_master* %classvariable.this.addr, i32 0, i32 0
store %class.initialization_in_place_and_this_1_slave_1* %initialization_in_place_and_this_1_master.buffer, %class.initialization_in_place_and_this_1_slave_1** %var17, align 8
%var18 = getelementptr inbounds %class.initialization_in_place_and_this_1_master* %classvariable.this.addr, i32 0, i32 1
%var19 = getelementptr inbounds %class.initialization_in_place_and_this_1_master* %classvariable.this.addr, i32 0, i32 0
%var20 = load %class.initialization_in_place_and_this_1_slave_1** %var19, align 8
%var22 = call i8* @malloc_heap(i32 16)
%var21 = bitcast i8* %var22 to %class.initialization_in_place_and_this_1_slave_2*
%var23 = alloca %class.initialization_in_place_and_this_1_slave_2*, align 8
store %class.initialization_in_place_and_this_1_slave_2* %var21, %class.initialization_in_place_and_this_1_slave_2** %var23, align 8
call void @initialization_in_place_and_this_1_slave_2_Ref_initialization_in_place_and_this_1_slave_1(%class.initialization_in_place_and_this_1_slave_2* %var21, %class.initialization_in_place_and_this_1_slave_1* %var20)
%var24 = load %class.initialization_in_place_and_this_1_slave_2** %var18, align 8
%var25 = load %class.initialization_in_place_and_this_1_slave_2** %var23, align 8
store %class.initialization_in_place_and_this_1_slave_2* %var25, %class.initialization_in_place_and_this_1_slave_2** %var18, align 8
%var26 = bitcast %class.initialization_in_place_and_this_1_master* %classvariable.this to i8*
%var27 = bitcast %class.initialization_in_place_and_this_1_master* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var26, i8* %var27, i64 16, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @initialization_in_place_and_this_1() #0
{
%var29 = call i8* @malloc_heap(i32 4)
%var28 = bitcast i8* %var29 to %class.initialization_in_place_and_this_1_slave_1*
%var30 = alloca %class.initialization_in_place_and_this_1_slave_1*, align 8
store %class.initialization_in_place_and_this_1_slave_1* %var28, %class.initialization_in_place_and_this_1_slave_1** %var30, align 8
call void @initialization_in_place_and_this_1_slave_1_Int(%class.initialization_in_place_and_this_1_slave_1* %var28, i32 100)
%managed.unique.0.initialization_in_place_and_this_1.slave = alloca %class.initialization_in_place_and_this_1_slave_1*, align 8
%var31 = load %class.initialization_in_place_and_this_1_slave_1** %managed.unique.0.initialization_in_place_and_this_1.slave, align 8
%var32 = load %class.initialization_in_place_and_this_1_slave_1** %var30, align 8
store %class.initialization_in_place_and_this_1_slave_1* %var32, %class.initialization_in_place_and_this_1_slave_1** %managed.unique.0.initialization_in_place_and_this_1.slave, align 8
%var33 = load %class.initialization_in_place_and_this_1_slave_1** %managed.unique.0.initialization_in_place_and_this_1.slave, align 8
%var35 = call i8* @malloc_heap(i32 16)
%var34 = bitcast i8* %var35 to %class.initialization_in_place_and_this_1_master*
%var36 = alloca %class.initialization_in_place_and_this_1_master*, align 8
store %class.initialization_in_place_and_this_1_master* %var34, %class.initialization_in_place_and_this_1_master** %var36, align 8
call void @initialization_in_place_and_this_1_master_Ref_initialization_in_place_and_this_1_slave_1(%class.initialization_in_place_and_this_1_master* %var34, %class.initialization_in_place_and_this_1_slave_1* %var33)
%managed.unique.1.initialization_in_place_and_this_1.master = alloca %class.initialization_in_place_and_this_1_master*, align 8
%var37 = load %class.initialization_in_place_and_this_1_master** %managed.unique.1.initialization_in_place_and_this_1.master, align 8
%var38 = load %class.initialization_in_place_and_this_1_master** %var36, align 8
store %class.initialization_in_place_and_this_1_master* %var38, %class.initialization_in_place_and_this_1_master** %managed.unique.1.initialization_in_place_and_this_1.master, align 8
%var39 = load %class.initialization_in_place_and_this_1_master** %managed.unique.1.initialization_in_place_and_this_1.master, align 8
%var40 = getelementptr inbounds %class.initialization_in_place_and_this_1_master* %var39, i32 0, i32 1
%var41 = load %class.initialization_in_place_and_this_1_slave_2** %var40, align 8
%var42 = getelementptr inbounds %class.initialization_in_place_and_this_1_slave_2* %var41, i32 0, i32 2
%var43 = load i32* %var42, align 4
ret i32 %var43
unreachable
}

