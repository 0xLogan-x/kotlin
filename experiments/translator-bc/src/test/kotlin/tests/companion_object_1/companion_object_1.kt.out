@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.companion_object_1 = type {  }
%class.companion_object_1.Companion = type { i32 }
@object.instance.companion_object_1.Companion = internal global %class.companion_object_1.Companion { i32 5790 }, align 8
define weak void @companion_object_1(%class.companion_object_1*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.companion_object_1, align 8
%var2 = bitcast %class.companion_object_1* %classvariable.this to i8*
%var3 = bitcast %class.companion_object_1* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var2, i8* %var3, i64 0, i32 4, i1 false)
ret void 
unreachable
}
define weak void @companion_object_1.Companion(%class.companion_object_1.Companion*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.companion_object_1.Companion, align 8
%var4 = getelementptr inbounds %class.companion_object_1.Companion* %classvariable.this.addr, i32 0, i32 0
%var5 = load i32* %var4, align 4
store i32 5790, i32* %var4, align 4
%var6 = bitcast %class.companion_object_1.Companion* %classvariable.this to i8*
%var7 = bitcast %class.companion_object_1.Companion* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var6, i8* %var7, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @companion_object_1.Companion.create(%class.companion_object_1.Companion*  %classvariable.this) #0
{
ret i32 5
unreachable
}
define weak i32 @companion_object_1_test() #0
{
%var8 = call i32 @companion_object_1.Companion.create(%class.companion_object_1.Companion* @object.instance.companion_object_1.Companion)
%var9 = alloca i32, align 4
store i32 %var8, i32* %var9, align 4
%var10 = load i32* %var9, align 4
ret i32 %var10
unreachable
}

