@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i32 @Int.compareTo_Int(i32  %type, i32  %compareTo.x) #0
{
%compareTo.x.addr = alloca i32, align 4
store i32 %compareTo.x, i32* %compareTo.x.addr, align 4
%var2 = load i32* %compareTo.x.addr, align 4
%var3 = add nsw i32 %type, %var2
%var4 = add nsw i32 %var3, 5
ret i32 %var4
unreachable
}
define weak i32 @function_extensions_1_Int(i32  %function_extensions_1.x) #0
{
%function_extensions_1.x.addr = alloca i32, align 4
store i32 %function_extensions_1.x, i32* %function_extensions_1.x.addr, align 4
%var5 = load i32* %function_extensions_1.x.addr, align 4
%var6 = call i32 @Int.compareTo_Int(i32 %var5, i32 1)
%var7 = alloca i32, align 4
store i32 %var6, i32* %var7, align 4
%var8 = call i32 @Int.compareTo_Int(i32 39, i32 123)
%var9 = alloca i32, align 4
store i32 %var8, i32* %var9, align 4
%var10 = load i32* %var7, align 4
%var11 = load i32* %var9, align 4
%var12 = add nsw i32 %var10, %var11
ret i32 %var12
unreachable
}

