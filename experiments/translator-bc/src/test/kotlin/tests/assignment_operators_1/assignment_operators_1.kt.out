@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i32 @assignment_operators_1_plus_Int(i32  %assignment_operators_1_plus.x) #0
{
%assignment_operators_1_plus.x.addr = alloca i32, align 4
store i32 %assignment_operators_1_plus.x, i32* %assignment_operators_1_plus.x.addr, align 4
%managed.unique.0.assignment_operators_1_plus.nzk = alloca i32, align 4
%var2 = load i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var3 = load i32* %assignment_operators_1_plus.x.addr, align 4
store i32 %var3, i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var4 = load i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var5 = load i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var6 = add nsw i32 %var5, 6
store i32 %var6, i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var7 = load i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
%var8 = load i32* %managed.unique.0.assignment_operators_1_plus.nzk, align 4
ret i32 %var8
unreachable
}
define weak i32 @assignment_operators_1_times_Int(i32  %assignment_operators_1_times.x) #0
{
%assignment_operators_1_times.x.addr = alloca i32, align 4
store i32 %assignment_operators_1_times.x, i32* %assignment_operators_1_times.x.addr, align 4
%managed.unique.1.assignment_operators_1_times.nzk = alloca i32, align 4
%var9 = load i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var10 = load i32* %assignment_operators_1_times.x.addr, align 4
store i32 %var10, i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var11 = load i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var12 = load i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var13 = mul nsw i32 %var12, 6
store i32 %var13, i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var14 = load i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
%var15 = load i32* %managed.unique.1.assignment_operators_1_times.nzk, align 4
ret i32 %var15
unreachable
}
define weak i32 @assignment_operators_1_minus_Int(i32  %assignment_operators_1_minus.x) #0
{
%assignment_operators_1_minus.x.addr = alloca i32, align 4
store i32 %assignment_operators_1_minus.x, i32* %assignment_operators_1_minus.x.addr, align 4
%managed.unique.2.assignment_operators_1_minus.nzk = alloca i32, align 4
%var16 = load i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var17 = load i32* %assignment_operators_1_minus.x.addr, align 4
store i32 %var17, i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var18 = load i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var19 = load i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var20 = sub nsw i32 %var19, 6
store i32 %var20, i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var21 = load i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
%var22 = load i32* %managed.unique.2.assignment_operators_1_minus.nzk, align 4
ret i32 %var22
unreachable
}

