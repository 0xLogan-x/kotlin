@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.MyClass_if_1 = type {  }
define weak void @MyClass_if_1(%class.MyClass_if_1*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.MyClass_if_1, align 8
%var2 = bitcast %class.MyClass_if_1* %classvariable.this to i8*
%var3 = bitcast %class.MyClass_if_1* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var2, i8* %var3, i64 0, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @if_test_null_Int(i32  %if_test_null.x) #0
{
%if_test_null.x.addr = alloca i32, align 4
store i32 %if_test_null.x, i32* %if_test_null.x.addr, align 4
%managed.unique.0.if_test_null.y = alloca %class.MyClass_if_1*, align 8
%var4 = load %class.MyClass_if_1** %managed.unique.0.if_test_null.y, align 8
store %class.MyClass_if_1* null, %class.MyClass_if_1** %managed.unique.0.if_test_null.y, align 8
%var5 = load %class.MyClass_if_1** %managed.unique.0.if_test_null.y, align 8
%var6 = load %class.MyClass_if_1** %managed.unique.0.if_test_null.y, align 8
%var7 = icmp eq %class.MyClass_if_1* %var6, null
br i1 %var7, label %label.if.1, label %label.if.2
label.if.1:
ret i32 1
br label %label.if.3
label.if.2:
ret i32 0
br label %label.if.3
label.if.3:
unreachable
}
define weak i32 @if_test_1_Int(i32  %if_test_1.x) #0
{
%if_test_1.x.addr = alloca i32, align 4
store i32 %if_test_1.x, i32* %if_test_1.x.addr, align 4
%managed.unique.1.if_test_1.a = alloca i32, align 4
%var8 = load i32* %managed.unique.1.if_test_1.a, align 4
store i32 0, i32* %managed.unique.1.if_test_1.a, align 4
%var9 = load i32* %if_test_1.x.addr, align 4
%var10 = icmp sgt i32 %var9, 5
br i1 %var10, label %label.if.4, label %label.if.5
label.if.4:
%var11 = load i32* %managed.unique.1.if_test_1.a, align 4
store i32 10, i32* %managed.unique.1.if_test_1.a, align 4
br label %label.if.6
label.if.5:
br label %label.if.6
label.if.6:
%var12 = load i32* %managed.unique.1.if_test_1.a, align 4
ret i32 %var12
unreachable
}
define weak i32 @if_test_null_2_Int(i32  %if_test_null_2.x) #0
{
%if_test_null_2.x.addr = alloca i32, align 4
store i32 %if_test_null_2.x, i32* %if_test_null_2.x.addr, align 4
%var14 = call i8* @malloc_heap(i32 0)
%var13 = bitcast i8* %var14 to %class.MyClass_if_1*
%var15 = alloca %class.MyClass_if_1*, align 8
store %class.MyClass_if_1* %var13, %class.MyClass_if_1** %var15, align 8
call void @MyClass_if_1(%class.MyClass_if_1* %var13)
%managed.unique.2.if_test_null_2.y = alloca %class.MyClass_if_1*, align 8
%var16 = load %class.MyClass_if_1** %managed.unique.2.if_test_null_2.y, align 8
%var17 = load %class.MyClass_if_1** %var15, align 8
store %class.MyClass_if_1* %var17, %class.MyClass_if_1** %managed.unique.2.if_test_null_2.y, align 8
%var18 = load %class.MyClass_if_1** %managed.unique.2.if_test_null_2.y, align 8
%var19 = load %class.MyClass_if_1** %managed.unique.2.if_test_null_2.y, align 8
%var20 = icmp eq %class.MyClass_if_1* %var19, null
br i1 %var20, label %label.if.7, label %label.if.8
label.if.7:
ret i32 1
br label %label.if.9
label.if.8:
ret i32 0
br label %label.if.9
label.if.9:
unreachable
}

