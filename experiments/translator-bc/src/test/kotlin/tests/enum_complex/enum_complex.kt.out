@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
%class.Holder = type {  }
%class.Holder.nested = type { i32 }
%class.Holder.nested.Companion = type {  }
@object.instance.Holder.nested.Companion = internal global %class.Holder.nested.Companion {  }, align 8
define weak void @Holder(%class.Holder*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.Holder, align 8
%var2 = bitcast %class.Holder* %classvariable.this to i8*
%var3 = bitcast %class.Holder* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var2, i8* %var3, i64 0, i32 4, i1 false)
ret void 
unreachable
}
@var4 = global %class.Holder.nested { i32 0 }, align 8
@class.Holder.nested.FIRST = global %class.Holder.nested* @var4, align 8
@var5 = global %class.Holder.nested { i32 1 }, align 8
@class.Holder.nested.SECOND = global %class.Holder.nested* @var5, align 8
@var6 = global %class.Holder.nested { i32 3 }, align 8
@class.Holder.nested.THIRD = global %class.Holder.nested* @var6, align 8
define weak void @Holder.nested_Int(%class.Holder.nested*  %classvariable.this, i32  %Holder.nested.id) #0
{
%classvariable.this.addr = alloca %class.Holder.nested, align 8
%Holder.nested.id.addr = alloca i32, align 4
store i32 %Holder.nested.id, i32* %Holder.nested.id.addr, align 4
%var7 = load i32* %Holder.nested.id.addr, align 4
%var8 = getelementptr inbounds %class.Holder.nested* %classvariable.this.addr, i32 0, i32 0
store i32 %var7, i32* %var8, align 4
%var9 = bitcast %class.Holder.nested* %classvariable.this to i8*
%var10 = bitcast %class.Holder.nested* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var9, i8* %var10, i64 4, i32 4, i1 false)
ret void 
unreachable
}
define weak void @Holder.nested.Companion(%class.Holder.nested.Companion*  %classvariable.this) #0
{
%classvariable.this.addr = alloca %class.Holder.nested.Companion, align 8
%var11 = bitcast %class.Holder.nested.Companion* %classvariable.this to i8*
%var12 = bitcast %class.Holder.nested.Companion* %classvariable.this.addr to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %var11, i8* %var12, i64 0, i32 4, i1 false)
ret void 
unreachable
}
define weak i32 @Holder.nested.Companion.functor_Int(%class.Holder.nested.Companion*  %classvariable.this, i32  %Holder.nested.Companion.functor.ord) #0
{
%Holder.nested.Companion.functor.ord.addr = alloca i32, align 4
store i32 %Holder.nested.Companion.functor.ord, i32* %Holder.nested.Companion.functor.ord.addr, align 4
%var13 = load %class.Holder.nested** @class.Holder.nested.FIRST, align 8
%var14 = getelementptr inbounds %class.Holder.nested* %var13, i32 0, i32 0
%var15 = load i32* %var14, align 4
ret i32 %var15
unreachable
}
define weak i32 @enum_complex_test1() #0
{
%var17 = call i8* @malloc_heap(i32 0)
%var16 = bitcast i8* %var17 to %class.Holder*
%var18 = alloca %class.Holder*, align 8
store %class.Holder* %var16, %class.Holder** %var18, align 8
call void @Holder(%class.Holder* %var16)
%managed.unique.0.enum_complex_test1.h = alloca %class.Holder*, align 8
%var19 = load %class.Holder** %managed.unique.0.enum_complex_test1.h, align 8
%var20 = load %class.Holder** %var18, align 8
store %class.Holder* %var20, %class.Holder** %managed.unique.0.enum_complex_test1.h, align 8
%var21 = call i32 @Holder.nested.Companion.functor_Int(%class.Holder.nested.Companion* @object.instance.Holder.nested.Companion, i32 0)
%var22 = alloca i32, align 4
store i32 %var21, i32* %var22, align 4
%var23 = load i32* %var22, align 4
ret i32 %var23
unreachable
}

