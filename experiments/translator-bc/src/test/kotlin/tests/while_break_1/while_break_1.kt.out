@exceptions.str.1 = private unnamed_addr constant  [59 x i8] c"Exception in thread main kotlin.KotlinNullPointerException\00", align 1
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1)
declare i8* @malloc_heap(i32)
declare i32 @printf(i8*, ...)
declare void @abort()
%class.Nothing = type { }
define weak i32 @while_break_1() #0
{
%managed.unique.0.while_break_1.i = alloca i32, align 4
%var2 = load i32* %managed.unique.0.while_break_1.i, align 4
store i32 1, i32* %managed.unique.0.while_break_1.i, align 4
br label %label.while.1
label.while.1:
br i1 1, label %label.while.2, label %label.while.3
label.while.2:
%var3 = load i32* %managed.unique.0.while_break_1.i, align 4
%var4 = add nsw i32 %var3, 1
%var5 = load i32* %managed.unique.0.while_break_1.i, align 4
store i32 %var4, i32* %managed.unique.0.while_break_1.i, align 4
br label %label.while.3
%var6 = sub nsw i32 0, 100
%var7 = load i32* %managed.unique.0.while_break_1.i, align 4
store i32 %var6, i32* %managed.unique.0.while_break_1.i, align 4
br label %label.while.1
label.while.3:
%var8 = load i32* %managed.unique.0.while_break_1.i, align 4
ret i32 %var8
unreachable
}

