buildscript {
   ext.kotlin_ir_path = "$projectDir/kotlin-ir/dist"
   repositories {
       mavenCentral()
   }

   dependencies {
       classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   }

}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: org.jetbrains.kotlin.NativeInteropPlugin

ext.deps = files("$kotlin_ir_path/kotlinc/lib/kotlin-compiler.jar",
                 "$kotlin_ir_path/kotlinc/lib/kotlin-runtime.jar",
		 "$kotlin_ir_path/kotlinc/lib/kotlin-reflect.jar")

sourceSets {
    compiler {
      java.srcDirs += 'compiler/ir/backend.native/src/'
      kotlin.srcDirs += 'compiler/ir/backend.native/src/'
      compileClasspath = deps
    }
    cli_bc {
      java.srcDirs += 'cli.bc/src'
      kotlin.srcDirs += 'cli.bc/src'
      compileClasspath = deps
    }
    bc_frontend {
     java.srcDirs += 'bc.frontend/src'
     kotlin.srcDirs += 'bc.frontend/src'
     compileClasspath = deps
   }
}

def runtime = []

task run(type: JavaExec) {
   main 'org.jetbrains.kotlin.cli.bc.K2NativeKt'
   project.sourceSets.each{runtime.add(it.output.classesDir)}
   deps.each{runtime.add(it)}
   println(runtime)
   classpath = files(runtime)
   args '../experiments/translator/src/test/kotlin/tests/classfields_1/classfields_1.kt'
   args '-output', "$buildDir/out.bc"

   dependsOn ':runtime:build'

   doFirst {
       args '-runtime', project(':runtime').build.outputs.files.singleFile
       println(args)
   }
}



task jars {
    println "kotlin-ir: $kotlin_ir_path"
    project.buildscript.configurations.classpath.each {
      String jarName = it.getName();
      print jarName + ":"
    }
}

repositories {
    mavenCentral()
}

genInteropStubs {
    environment 'CPATH'        : "$llvmInstallPath/include"
    environment 'LIBRARY_PATH' : "$llvmInstallPath/lib"
}
