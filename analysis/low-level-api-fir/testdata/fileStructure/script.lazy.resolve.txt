FILE: [ResolvedTo(IMPORTS)] script.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(BODY_RESOLVE)] class Builder : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] constructor(): R|Builder| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] var version: R|kotlin/String| = String()
                public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|
                public [ResolvedTo(BODY_RESOLVE)] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

            public final [ResolvedTo(BODY_RESOLVE)] fun execute(): R|kotlin/Unit| {
                <Unresolved name: println>#(this@R|/Builder|.R|/Builder.version|)
            }

        }

        public final [ResolvedTo(BODY_RESOLVE)] fun build([ResolvedTo(BODY_RESOLVE)] action: R|Builder.() -> kotlin/Unit|): R|Builder| {
            ^build R|/Builder.Builder|().R|kotlin/apply|<R|Builder|>(R|<local>/action|)
        }

        public final [ResolvedTo(BODY_RESOLVE)] fun build2([ResolvedTo(BODY_RESOLVE)] action: R|Builder.() -> kotlin/Unit|): R|Builder| {
            ^build2 R|/Builder.Builder|().R|kotlin/apply|<R|Builder|>(R|<local>/action|)
        }

        build#(<L> = [ResolvedTo(RAW_FIR)] build@fun <implicit>.<anonymous>(): <implicit> <inline=Unknown>  {
            version# = String(123)
            local final? [ResolvedTo(RAW_FIR)] class A : R|kotlin/Any| {
                public? [ResolvedTo(RAW_FIR)] constructor(): R|A| {
                    super<R|kotlin/Any|>()
                }

                public? final? [ResolvedTo(RAW_FIR)] fun doo(): R|kotlin/Unit| {
                }

            }

            execute#()
        }
        )
        public final [ResolvedTo(BODY_RESOLVE)] val builder: <ERROR TYPE REF: Unresolved name: build> = <Unresolved name: build>#(<L> = [ResolvedTo(BODY_RESOLVE)] build@fun <anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
            <Unresolved name: version># = String(321)
        }
        )
            public [ResolvedTo(BODY_RESOLVE)] get(): <ERROR TYPE REF: Unresolved name: build>

        public final [ResolvedTo(RAW_FIR)] val $$result: <implicit> = builder#.execute#()
            public [ResolvedTo(RAW_FIR)] get(): <implicit>

