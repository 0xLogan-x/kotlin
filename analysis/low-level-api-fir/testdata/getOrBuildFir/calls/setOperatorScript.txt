KT element: KtArrayAccessExpression
FIR element: FirScriptImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

    public? final? [ResolvedTo(RAW_FIR)] class B : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=test/B.n] n: Int): R|test/B| {
            super<R|kotlin/Any|>()
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val n: Int = R|<local>/n|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] get(): Int

        public? final? operator [ResolvedTo(RAW_FIR)] fun set([ResolvedTo(RAW_FIR)] i: Int, [ResolvedTo(RAW_FIR)] a: B): R|kotlin/Unit| {
        }

        public? final? operator [ResolvedTo(RAW_FIR)] fun get([ResolvedTo(RAW_FIR)] i: Int): B {
        }

        public? final? operator [ResolvedTo(RAW_FIR)] fun inc(): B {
        }

    }

    public? final? [ResolvedTo(RAW_FIR)] var a: <implicit> = B#(IntegerLiteral(1))
        public? [ResolvedTo(RAW_FIR)] get(): <implicit>
        public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit|

    public final [ResolvedTo(RAW_FIR)] val $$result: <implicit> =  {
        [ResolvedTo(RAW_FIR)] lval <array>: <implicit> = a#
        [ResolvedTo(RAW_FIR)] lval <index_0>: <implicit> = IntegerLiteral(2)
        [ResolvedTo(RAW_FIR)] lval <unary>: <implicit> = R|<local>/<array>|.get#(R|<local>/<index_0>|)
        R|<local>/<array>|.set#(R|<local>/<index_0>|, R|<local>/<unary>|.inc#())
        R|<local>/<unary>|
    }

        public [ResolvedTo(RAW_FIR)] get(): <implicit>

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] setOperatorScript.kts
    package test

    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class B : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=test/B.n] n: Int): R|test/B| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val n: Int = R|<local>/n|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] get(): Int

            public? final? operator [ResolvedTo(RAW_FIR)] fun set([ResolvedTo(RAW_FIR)] i: Int, [ResolvedTo(RAW_FIR)] a: B): R|kotlin/Unit| {
            }

            public? final? operator [ResolvedTo(RAW_FIR)] fun get([ResolvedTo(RAW_FIR)] i: Int): B {
            }

            public? final? operator [ResolvedTo(RAW_FIR)] fun inc(): B {
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] var a: <implicit> = B#(IntegerLiteral(1))
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>
            public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit|

        public final [ResolvedTo(RAW_FIR)] val $$result: <implicit> =  {
            [ResolvedTo(RAW_FIR)] lval <array>: <implicit> = a#
            [ResolvedTo(RAW_FIR)] lval <index_0>: <implicit> = IntegerLiteral(2)
            [ResolvedTo(RAW_FIR)] lval <unary>: <implicit> = R|<local>/<array>|.get#(R|<local>/<index_0>|)
            R|<local>/<array>|.set#(R|<local>/<index_0>|, R|<local>/<unary>|.inc#())
            R|<local>/<unary>|
        }

            public [ResolvedTo(RAW_FIR)] get(): <implicit>