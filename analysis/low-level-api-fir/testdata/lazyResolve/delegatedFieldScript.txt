RAW_FIR:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
IMPORTS:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
TYPES:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
STATUS:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] delegatedFieldScript.kts
    public final [ResolvedTo(STATUS)] class Boo : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Boo] constructor(): R|one/Boo| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] b: R|one/Boo|): R|kotlin/Unit|

    }
    public final [ResolvedTo(STATUS)] [DelegateFieldsMapKey={0=FirFieldSymbol one/Usage.$$delegate_0}] class Usage : R|one/Foo| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Usage] constructor([ResolvedTo(STATUS)] prop: R|one/Foo|): R|one/Usage| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(STATUS)] field $$delegate_0: R|one/Foo| = R|<local>/prop|

        public final [ResolvedTo(STATUS)] fun baz([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
