RAW_FIR:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


TYPES:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


STATUS:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }


FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] resolveSuperTypeFromLocalClassScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] class UnusedClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=UnusedClass] constructor(): R|one/two/UnusedClass| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface2 : R|kotlin/Any| {
        }

        public? final? [ResolvedTo(RAW_FIR)] interface UsedInterface : UsedInterface2 {
        }

        public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
            local final? [ResolvedTo(RAW_FIR)] class Local : UsedInterface {
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Local] constructor(): R|one/two/Local| {
                    super<<implicit>>()
                }

            }

        }

