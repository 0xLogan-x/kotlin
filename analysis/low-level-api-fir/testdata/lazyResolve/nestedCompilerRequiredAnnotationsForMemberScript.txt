RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(RAW_FIR)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @Deprecated[Unresolved](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(RAW_FIR)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(RAW_FIR)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @Deprecated[Unresolved](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(RAW_FIR)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(RAW_FIR)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @Deprecated[Unresolved](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(RAW_FIR)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @R|kotlin/Deprecated|[CompilerRequiredAnnotations](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(RAW_FIR)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @Deprecated[Unresolved](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(RAW_FIR)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @R|kotlin/Deprecated|[CompilerRequiredAnnotations](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(COMPANION_GENERATION)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[CompilerRequiredAnnotations](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(SUPER_TYPES)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[CompilerRequiredAnnotations](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(SUPER_TYPES)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @R|kotlin/Deprecated|[CompilerRequiredAnnotations](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(SUPER_TYPES)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


TYPES:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public? final? [ResolvedTo(TYPES)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public? final? [ResolvedTo(TYPES)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public? final? [ResolvedTo(TYPES)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


STATUS:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(ARGUMENTS_OF_ANNOTATIONS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @R|kotlin/Deprecated|[Types](String(companion)) @R|Anno|[Types](String(companion)) public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(CONTRACTS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @R|kotlin/Deprecated|[Types](String(companion)) @R|Anno|[Types](String(companion)) public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @R|kotlin/Deprecated|[Types](String(companion)) @R|Anno|[Types](String(companion)) public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.s] s: R|kotlin/String|): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val s: R|kotlin/String| = R|<local>/s|
                public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](message = String(memberFunction)) @R|Anno|[Types](s = String(memberFunction)) public final [ResolvedTo(ANNOTATIONS_ARGUMENTS_MAPPING)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @R|kotlin/Deprecated|[Types](String(companion)) @R|Anno|[Types](String(companion)) public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.s] s: R|kotlin/String|): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val s: R|kotlin/String| = R|<local>/s|
                public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

        }

        @R|kotlin/Deprecated|[Types](String(FirstClass)) @R|Anno|[Types](String(FirstClass)) public final [ResolvedTo(STATUS)] class FirstClass : R|kotlin/Any| {
            @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): R|kotlin/Int|

            @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
            }

            @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                public [ResolvedTo(STATUS)] [ContainingClassKey=FirstClass] get(): <implicit>

            @R|kotlin/Deprecated|[Types](String(NestedClass)) @R|Anno|[Types](String(NestedClass)) public final [ResolvedTo(STATUS)] class NestedClass : R|kotlin/Any| {
                @R|kotlin/Deprecated|[Types](String(constructor)) @R|Anno|[Types](String(constructor)) public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/FirstClass.NestedClass.a] @R|Anno|[Types](String(constructorProperty)) a: R|kotlin/Int|): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(constructorProperty)) public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val a: R|kotlin/Int| = R|<local>/a|
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): R|kotlin/Int|

                @R|kotlin/Deprecated|[Types](message = String(memberFunction)) @R|Anno|[Types](s = String(memberFunction)) public final [ResolvedTo(BODY_RESOLVE)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @R|kotlin/Deprecated|[Types](String(companion)) @R|Anno|[Types](String(companion)) public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @R|kotlin/Deprecated|[Types](String(memberFunction)) @R|Anno|[Types](String(memberFunction)) public final [ResolvedTo(STATUS)] fun memberFunction(): R|kotlin/Unit| {
                }

                @R|kotlin/Deprecated|[Types](String(memberProperty)) @R|Anno|[Types](String(memberProperty)) public final [ResolvedTo(STATUS)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public [ResolvedTo(STATUS)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }


FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] nestedCompilerRequiredAnnotationsForMemberScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)]
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(FirstClass)) @Anno[Unresolved](String(FirstClass)) public? final? [ResolvedTo(RAW_FIR)] class FirstClass : R|kotlin/Any| {
            @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): Int

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

            @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=FirstClass] get(): <implicit>

            @Deprecated[Unresolved](String(NestedClass)) @Anno[Unresolved](String(NestedClass)) public? final? [ResolvedTo(RAW_FIR)] class NestedClass : R|kotlin/Any| {
                @Deprecated[Unresolved](String(constructor)) @Anno[Unresolved](String(constructor)) public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/FirstClass.NestedClass.a] @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) a: Int): R|FirstClass.NestedClass| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(constructorProperty)) @Anno[Unresolved](String(constructorProperty)) public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val a: Int = R|<local>/a|
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): Int

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=NestedClass] get(): <implicit>

            }

            @Deprecated[Unresolved](String(companion)) @Anno[Unresolved](String(companion)) public? final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|FirstClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
                }

                @Deprecated[Unresolved](String(memberProperty)) @Anno[Unresolved](String(memberProperty)) public? final? [ResolvedTo(RAW_FIR)] val memberProperty: <implicit> = IntegerLiteral(32)
                    public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

            }

        }

        @Deprecated[Unresolved](String(AnotherClass)) @Anno[Unresolved](String(AnotherClass)) public? final? [ResolvedTo(RAW_FIR)] class AnotherClass : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=AnotherClass] constructor(): R|AnotherClass| {
                super<R|kotlin/Any|>()
            }

            @Deprecated[Unresolved](String(memberFunction)) @Anno[Unresolved](String(memberFunction)) public? final? [ResolvedTo(RAW_FIR)] fun memberFunction(): R|kotlin/Unit| {
            }

        }
