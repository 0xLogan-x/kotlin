RAW_FIR:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
IMPORTS:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
TYPES:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
STATUS:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] complexLocalHierarchyScript.kts
    public abstract [ResolvedTo(STATUS)] interface NonLocalInterface : R|kotlin/Any| {
    }
    public final [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| {
        local open [ResolvedTo(RAW_FIR)] class A : <ERROR TYPE REF: Symbol not found for B> {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=A] constructor(): R|one/A| {
                super<<ERROR TYPE REF: Symbol not found for B>>()
            }

        }

        local final [ResolvedTo(RAW_FIR)] class B : R|one/NonLocalInterface| {
            public [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] constructor(): R|one/B| {
                super<R|kotlin/Any|>()
            }

            local final inner [ResolvedTo(RAW_FIR)] [ContainingClassKey=B] class C : R|one/A| {
                public [ResolvedTo(RAW_FIR)] [ContainingClassKey=C] one/B.constructor(): R|one/B.C| {
                    super<R|one/A|>()
                }

            }

        }

    }
    [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
