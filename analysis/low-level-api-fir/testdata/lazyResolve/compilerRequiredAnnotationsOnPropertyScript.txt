RAW_FIR:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


TYPES:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


STATUS:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }


FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] compilerRequiredAnnotationsOnPropertyScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] annotation class Anno : R|kotlin/Annotation| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.s] s: String): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val s: String = R|<local>/s|
                public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

        }

        @Deprecated[Unresolved](String(property)) @Anno[Unresolved](String(property)) public? final? [ResolvedTo(RAW_FIR)] var memberProperty: <implicit> = IntegerLiteral(32)
            @Deprecated[Unresolved](String(getter)) @Anno[Unresolved](String(getter)) public? [ResolvedTo(RAW_FIR)] get(): <implicit> {
                ^ field#
            }
            @PROPERTY_SETTER:Deprecated[Unresolved](String(setter)) @Anno[Unresolved](String(setter)) @SETTER_PARAMETER:Deprecated[Unresolved](String(setparam)) @SETTER_PARAMETER:Anno[Unresolved](String(setparam)) public? [ResolvedTo(RAW_FIR)] set([ResolvedTo(RAW_FIR)] value: <implicit>): R|kotlin/Unit| {
                field# = value#
            }

