RAW_FIR:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


TYPES:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


STATUS:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }


FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] localFunctionInsideSuperEntryCallScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public? final? [ResolvedTo(RAW_FIR)] interface Interface : R|kotlin/Any| {
            public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit|

        }

        public? open [ResolvedTo(RAW_FIR)] class ClassWithParameter : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(RAW_FIR)] i: Interface): R|one/ClassWithParameter| {
                super<R|kotlin/Any|>()
            }

        }

        public? final? [ResolvedTo(RAW_FIR)] class TopLevelClass : ClassWithParameter {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
                super<ClassWithParameter>(object : Interface {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<<implicit>>()
                    }

                    public? open? override [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] param: String): R|kotlin/Unit| {
                    }

                }
                )
            }

        }

