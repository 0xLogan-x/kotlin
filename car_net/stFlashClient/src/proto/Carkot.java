// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: carkot.proto

package proto;

public final class Carkot {
  private Carkot() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UploadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:carkot.Upload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Firmware data.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * Firmware load address (string, to avoid 64-bit woes).
     * </pre>
     *
     * <code>optional string base = 2;</code>
     */
    java.lang.String getBase();
    /**
     * <pre>
     * Firmware load address (string, to avoid 64-bit woes).
     * </pre>
     *
     * <code>optional string base = 2;</code>
     */
    com.google.protobuf.ByteString
        getBaseBytes();

    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    boolean hasMethod();
    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    proto.Carkot.Upload.Method getMethod();
    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    proto.Carkot.Upload.MethodOrBuilder getMethodOrBuilder();
  }
  /**
   * Protobuf type {@code carkot.Upload}
   */
  public  static final class Upload extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:carkot.Upload)
      UploadOrBuilder {
    // Use Upload.newBuilder() to construct.
    private Upload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Upload() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      base_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Upload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              base_ = s;
              break;
            }
            case 26: {
              proto.Carkot.Upload.Method.Builder subBuilder = null;
              if (method_ != null) {
                subBuilder = method_.toBuilder();
              }
              method_ = input.readMessage(proto.Carkot.Upload.Method.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(method_);
                method_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Carkot.internal_static_carkot_Upload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Carkot.internal_static_carkot_Upload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Carkot.Upload.class, proto.Carkot.Upload.Builder.class);
    }

    public interface MethodOrBuilder extends
        // @@protoc_insertion_point(interface_extends:carkot.Upload.Method)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Type of upload method.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
       */
      int getTypeValue();
      /**
       * <pre>
       * Type of upload method.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
       */
      proto.Carkot.Upload.Method.TYPE getType();

      /**
       * <pre>
       * Upload port.
       * </pre>
       *
       * <code>optional string port = 2;</code>
       */
      java.lang.String getPort();
      /**
       * <pre>
       * Upload port.
       * </pre>
       *
       * <code>optional string port = 2;</code>
       */
      com.google.protobuf.ByteString
          getPortBytes();

      /**
       * <pre>
       * Device address, smth like 8087:0ABA.
       * </pre>
       *
       * <code>optional string device = 3;</code>
       */
      java.lang.String getDevice();
      /**
       * <pre>
       * Device address, smth like 8087:0ABA.
       * </pre>
       *
       * <code>optional string device = 3;</code>
       */
      com.google.protobuf.ByteString
          getDeviceBytes();

      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      com.google.protobuf.ProtocolStringList
          getArgumentsList();
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      int getArgumentsCount();
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      java.lang.String getArguments(int index);
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      com.google.protobuf.ByteString
          getArgumentsBytes(int index);
    }
    /**
     * Protobuf type {@code carkot.Upload.Method}
     */
    public  static final class Method extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:carkot.Upload.Method)
        MethodOrBuilder {
      // Use Method.newBuilder() to construct.
      private Method(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Method() {
        type_ = 0;
        port_ = "";
        device_ = "";
        arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Method(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                port_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                device_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  arguments_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                arguments_.add(s);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            arguments_ = arguments_.getUnmodifiableView();
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Carkot.internal_static_carkot_Upload_Method_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Carkot.internal_static_carkot_Upload_Method_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Carkot.Upload.Method.class, proto.Carkot.Upload.Method.Builder.class);
      }

      /**
       * Protobuf enum {@code carkot.Upload.Method.TYPE}
       */
      public enum TYPE
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DFU = 0;</code>
         */
        DFU(0),
        /**
         * <code>STLINK = 1;</code>
         */
        STLINK(1),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>DFU = 0;</code>
         */
        public static final int DFU_VALUE = 0;
        /**
         * <code>STLINK = 1;</code>
         */
        public static final int STLINK_VALUE = 1;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TYPE valueOf(int value) {
          return forNumber(value);
        }

        public static TYPE forNumber(int value) {
          switch (value) {
            case 0: return DFU;
            case 1: return STLINK;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TYPE>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            TYPE> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TYPE>() {
                public TYPE findValueByNumber(int number) {
                  return TYPE.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return proto.Carkot.Upload.Method.getDescriptor().getEnumTypes().get(0);
        }

        private static final TYPE[] VALUES = values();

        public static TYPE valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private TYPE(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:carkot.Upload.Method.TYPE)
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Type of upload method.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of upload method.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
       */
      public proto.Carkot.Upload.Method.TYPE getType() {
        proto.Carkot.Upload.Method.TYPE result = proto.Carkot.Upload.Method.TYPE.forNumber(type_);
        return result == null ? proto.Carkot.Upload.Method.TYPE.UNRECOGNIZED : result;
      }

      public static final int PORT_FIELD_NUMBER = 2;
      private volatile java.lang.Object port_;
      /**
       * <pre>
       * Upload port.
       * </pre>
       *
       * <code>optional string port = 2;</code>
       */
      public java.lang.String getPort() {
        java.lang.Object ref = port_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          port_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Upload port.
       * </pre>
       *
       * <code>optional string port = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = port_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          port_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_FIELD_NUMBER = 3;
      private volatile java.lang.Object device_;
      /**
       * <pre>
       * Device address, smth like 8087:0ABA.
       * </pre>
       *
       * <code>optional string device = 3;</code>
       */
      public java.lang.String getDevice() {
        java.lang.Object ref = device_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          device_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Device address, smth like 8087:0ABA.
       * </pre>
       *
       * <code>optional string device = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceBytes() {
        java.lang.Object ref = device_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          device_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ARGUMENTS_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList arguments_;
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgumentsList() {
        return arguments_;
      }
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      public int getArgumentsCount() {
        return arguments_.size();
      }
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      public java.lang.String getArguments(int index) {
        return arguments_.get(index);
      }
      /**
       * <pre>
       * Additional programmator-specific arguments.
       * </pre>
       *
       * <code>repeated string arguments = 4;</code>
       */
      public com.google.protobuf.ByteString
          getArgumentsBytes(int index) {
        return arguments_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != proto.Carkot.Upload.Method.TYPE.DFU.getNumber()) {
          output.writeEnum(1, type_);
        }
        if (!getPortBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, port_);
        }
        if (!getDeviceBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, device_);
        }
        for (int i = 0; i < arguments_.size(); i++) {
          com.google.protobuf.GeneratedMessage.writeString(output, 4, arguments_.getRaw(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != proto.Carkot.Upload.Method.TYPE.DFU.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (!getPortBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, port_);
        }
        if (!getDeviceBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, device_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < arguments_.size(); i++) {
            dataSize += computeStringSizeNoTag(arguments_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getArgumentsList().size();
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static proto.Carkot.Upload.Method parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.Carkot.Upload.Method parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.Carkot.Upload.Method parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.Carkot.Upload.Method parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.Carkot.Upload.Method parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.Carkot.Upload.Method parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.Carkot.Upload.Method parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static proto.Carkot.Upload.Method parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.Carkot.Upload.Method parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.Carkot.Upload.Method parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.Carkot.Upload.Method prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code carkot.Upload.Method}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:carkot.Upload.Method)
          proto.Carkot.Upload.MethodOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.Carkot.internal_static_carkot_Upload_Method_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.Carkot.internal_static_carkot_Upload_Method_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.Carkot.Upload.Method.class, proto.Carkot.Upload.Method.Builder.class);
        }

        // Construct using proto.Carkot.Upload.Method.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          type_ = 0;

          port_ = "";

          device_ = "";

          arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.Carkot.internal_static_carkot_Upload_Method_descriptor;
        }

        public proto.Carkot.Upload.Method getDefaultInstanceForType() {
          return proto.Carkot.Upload.Method.getDefaultInstance();
        }

        public proto.Carkot.Upload.Method build() {
          proto.Carkot.Upload.Method result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public proto.Carkot.Upload.Method buildPartial() {
          proto.Carkot.Upload.Method result = new proto.Carkot.Upload.Method(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.type_ = type_;
          result.port_ = port_;
          result.device_ = device_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            arguments_ = arguments_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.arguments_ = arguments_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.Carkot.Upload.Method) {
            return mergeFrom((proto.Carkot.Upload.Method)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.Carkot.Upload.Method other) {
          if (other == proto.Carkot.Upload.Method.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (!other.getPort().isEmpty()) {
            port_ = other.port_;
            onChanged();
          }
          if (!other.getDevice().isEmpty()) {
            device_ = other.device_;
            onChanged();
          }
          if (!other.arguments_.isEmpty()) {
            if (arguments_.isEmpty()) {
              arguments_ = other.arguments_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureArgumentsIsMutable();
              arguments_.addAll(other.arguments_);
            }
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          proto.Carkot.Upload.Method parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (proto.Carkot.Upload.Method) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int type_ = 0;
        /**
         * <pre>
         * Type of upload method.
         * </pre>
         *
         * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
         */
        public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Type of upload method.
         * </pre>
         *
         * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of upload method.
         * </pre>
         *
         * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
         */
        public proto.Carkot.Upload.Method.TYPE getType() {
          proto.Carkot.Upload.Method.TYPE result = proto.Carkot.Upload.Method.TYPE.forNumber(type_);
          return result == null ? proto.Carkot.Upload.Method.TYPE.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Type of upload method.
         * </pre>
         *
         * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
         */
        public Builder setType(proto.Carkot.Upload.Method.TYPE value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of upload method.
         * </pre>
         *
         * <code>optional .carkot.Upload.Method.TYPE type = 1;</code>
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object port_ = "";
        /**
         * <pre>
         * Upload port.
         * </pre>
         *
         * <code>optional string port = 2;</code>
         */
        public java.lang.String getPort() {
          java.lang.Object ref = port_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            port_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Upload port.
         * </pre>
         *
         * <code>optional string port = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPortBytes() {
          java.lang.Object ref = port_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            port_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Upload port.
         * </pre>
         *
         * <code>optional string port = 2;</code>
         */
        public Builder setPort(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          port_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Upload port.
         * </pre>
         *
         * <code>optional string port = 2;</code>
         */
        public Builder clearPort() {
          
          port_ = getDefaultInstance().getPort();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Upload port.
         * </pre>
         *
         * <code>optional string port = 2;</code>
         */
        public Builder setPortBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          port_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object device_ = "";
        /**
         * <pre>
         * Device address, smth like 8087:0ABA.
         * </pre>
         *
         * <code>optional string device = 3;</code>
         */
        public java.lang.String getDevice() {
          java.lang.Object ref = device_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            device_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Device address, smth like 8087:0ABA.
         * </pre>
         *
         * <code>optional string device = 3;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceBytes() {
          java.lang.Object ref = device_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            device_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Device address, smth like 8087:0ABA.
         * </pre>
         *
         * <code>optional string device = 3;</code>
         */
        public Builder setDevice(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          device_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Device address, smth like 8087:0ABA.
         * </pre>
         *
         * <code>optional string device = 3;</code>
         */
        public Builder clearDevice() {
          
          device_ = getDefaultInstance().getDevice();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Device address, smth like 8087:0ABA.
         * </pre>
         *
         * <code>optional string device = 3;</code>
         */
        public Builder setDeviceBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          device_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureArgumentsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            arguments_ = new com.google.protobuf.LazyStringArrayList(arguments_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getArgumentsList() {
          return arguments_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public int getArgumentsCount() {
          return arguments_.size();
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public java.lang.String getArguments(int index) {
          return arguments_.get(index);
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public com.google.protobuf.ByteString
            getArgumentsBytes(int index) {
          return arguments_.getByteString(index);
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public Builder setArguments(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentsIsMutable();
          arguments_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public Builder addArguments(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentsIsMutable();
          arguments_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public Builder addAllArguments(
            java.lang.Iterable<java.lang.String> values) {
          ensureArgumentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arguments_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public Builder clearArguments() {
          arguments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Additional programmator-specific arguments.
         * </pre>
         *
         * <code>repeated string arguments = 4;</code>
         */
        public Builder addArgumentsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureArgumentsIsMutable();
          arguments_.add(value);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:carkot.Upload.Method)
      }

      // @@protoc_insertion_point(class_scope:carkot.Upload.Method)
      private static final proto.Carkot.Upload.Method DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.Carkot.Upload.Method();
      }

      public static proto.Carkot.Upload.Method getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Method>
          PARSER = new com.google.protobuf.AbstractParser<Method>() {
        public Method parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Method(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Method> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Method> getParserForType() {
        return PARSER;
      }

      public proto.Carkot.Upload.Method getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Firmware data.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int BASE_FIELD_NUMBER = 2;
    private volatile java.lang.Object base_;
    /**
     * <pre>
     * Firmware load address (string, to avoid 64-bit woes).
     * </pre>
     *
     * <code>optional string base = 2;</code>
     */
    public java.lang.String getBase() {
      java.lang.Object ref = base_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        base_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Firmware load address (string, to avoid 64-bit woes).
     * </pre>
     *
     * <code>optional string base = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBaseBytes() {
      java.lang.Object ref = base_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        base_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_FIELD_NUMBER = 3;
    private proto.Carkot.Upload.Method method_;
    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    public boolean hasMethod() {
      return method_ != null;
    }
    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    public proto.Carkot.Upload.Method getMethod() {
      return method_ == null ? proto.Carkot.Upload.Method.getDefaultInstance() : method_;
    }
    /**
     * <pre>
     * Method of firmware upload.
     * </pre>
     *
     * <code>optional .carkot.Upload.Method method = 3;</code>
     */
    public proto.Carkot.Upload.MethodOrBuilder getMethodOrBuilder() {
      return getMethod();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      if (!getBaseBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, base_);
      }
      if (method_ != null) {
        output.writeMessage(3, getMethod());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (!getBaseBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, base_);
      }
      if (method_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMethod());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static proto.Carkot.Upload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.Upload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.Upload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.Upload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.Upload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.Upload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.Upload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.Carkot.Upload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.Upload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.Upload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.Carkot.Upload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code carkot.Upload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:carkot.Upload)
        proto.Carkot.UploadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Carkot.internal_static_carkot_Upload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Carkot.internal_static_carkot_Upload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Carkot.Upload.class, proto.Carkot.Upload.Builder.class);
      }

      // Construct using proto.Carkot.Upload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        base_ = "";

        if (methodBuilder_ == null) {
          method_ = null;
        } else {
          method_ = null;
          methodBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Carkot.internal_static_carkot_Upload_descriptor;
      }

      public proto.Carkot.Upload getDefaultInstanceForType() {
        return proto.Carkot.Upload.getDefaultInstance();
      }

      public proto.Carkot.Upload build() {
        proto.Carkot.Upload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Carkot.Upload buildPartial() {
        proto.Carkot.Upload result = new proto.Carkot.Upload(this);
        result.data_ = data_;
        result.base_ = base_;
        if (methodBuilder_ == null) {
          result.method_ = method_;
        } else {
          result.method_ = methodBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Carkot.Upload) {
          return mergeFrom((proto.Carkot.Upload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Carkot.Upload other) {
        if (other == proto.Carkot.Upload.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getBase().isEmpty()) {
          base_ = other.base_;
          onChanged();
        }
        if (other.hasMethod()) {
          mergeMethod(other.getMethod());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Carkot.Upload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Carkot.Upload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Firmware data.
       * </pre>
       *
       * <code>optional bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Firmware data.
       * </pre>
       *
       * <code>optional bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Firmware data.
       * </pre>
       *
       * <code>optional bytes data = 1;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object base_ = "";
      /**
       * <pre>
       * Firmware load address (string, to avoid 64-bit woes).
       * </pre>
       *
       * <code>optional string base = 2;</code>
       */
      public java.lang.String getBase() {
        java.lang.Object ref = base_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          base_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Firmware load address (string, to avoid 64-bit woes).
       * </pre>
       *
       * <code>optional string base = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBaseBytes() {
        java.lang.Object ref = base_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          base_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Firmware load address (string, to avoid 64-bit woes).
       * </pre>
       *
       * <code>optional string base = 2;</code>
       */
      public Builder setBase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        base_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Firmware load address (string, to avoid 64-bit woes).
       * </pre>
       *
       * <code>optional string base = 2;</code>
       */
      public Builder clearBase() {
        
        base_ = getDefaultInstance().getBase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Firmware load address (string, to avoid 64-bit woes).
       * </pre>
       *
       * <code>optional string base = 2;</code>
       */
      public Builder setBaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        base_ = value;
        onChanged();
        return this;
      }

      private proto.Carkot.Upload.Method method_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          proto.Carkot.Upload.Method, proto.Carkot.Upload.Method.Builder, proto.Carkot.Upload.MethodOrBuilder> methodBuilder_;
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public boolean hasMethod() {
        return methodBuilder_ != null || method_ != null;
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public proto.Carkot.Upload.Method getMethod() {
        if (methodBuilder_ == null) {
          return method_ == null ? proto.Carkot.Upload.Method.getDefaultInstance() : method_;
        } else {
          return methodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public Builder setMethod(proto.Carkot.Upload.Method value) {
        if (methodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          method_ = value;
          onChanged();
        } else {
          methodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public Builder setMethod(
          proto.Carkot.Upload.Method.Builder builderForValue) {
        if (methodBuilder_ == null) {
          method_ = builderForValue.build();
          onChanged();
        } else {
          methodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public Builder mergeMethod(proto.Carkot.Upload.Method value) {
        if (methodBuilder_ == null) {
          if (method_ != null) {
            method_ =
              proto.Carkot.Upload.Method.newBuilder(method_).mergeFrom(value).buildPartial();
          } else {
            method_ = value;
          }
          onChanged();
        } else {
          methodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public Builder clearMethod() {
        if (methodBuilder_ == null) {
          method_ = null;
          onChanged();
        } else {
          method_ = null;
          methodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public proto.Carkot.Upload.Method.Builder getMethodBuilder() {
        
        onChanged();
        return getMethodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      public proto.Carkot.Upload.MethodOrBuilder getMethodOrBuilder() {
        if (methodBuilder_ != null) {
          return methodBuilder_.getMessageOrBuilder();
        } else {
          return method_ == null ?
              proto.Carkot.Upload.Method.getDefaultInstance() : method_;
        }
      }
      /**
       * <pre>
       * Method of firmware upload.
       * </pre>
       *
       * <code>optional .carkot.Upload.Method method = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.Carkot.Upload.Method, proto.Carkot.Upload.Method.Builder, proto.Carkot.Upload.MethodOrBuilder> 
          getMethodFieldBuilder() {
        if (methodBuilder_ == null) {
          methodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.Carkot.Upload.Method, proto.Carkot.Upload.Method.Builder, proto.Carkot.Upload.MethodOrBuilder>(
                  getMethod(),
                  getParentForChildren(),
                  isClean());
          method_ = null;
        }
        return methodBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:carkot.Upload)
    }

    // @@protoc_insertion_point(class_scope:carkot.Upload)
    private static final proto.Carkot.Upload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.Carkot.Upload();
    }

    public static proto.Carkot.Upload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Upload>
        PARSER = new com.google.protobuf.AbstractParser<Upload>() {
      public Upload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Upload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Upload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Upload> getParserForType() {
      return PARSER;
    }

    public proto.Carkot.Upload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UploadResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:carkot.UploadResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string stdOut = 1;</code>
     */
    java.lang.String getStdOut();
    /**
     * <code>optional string stdOut = 1;</code>
     */
    com.google.protobuf.ByteString
        getStdOutBytes();

    /**
     * <code>optional string stdErr = 2;</code>
     */
    java.lang.String getStdErr();
    /**
     * <code>optional string stdErr = 2;</code>
     */
    com.google.protobuf.ByteString
        getStdErrBytes();

    /**
     * <code>optional int32 resultCode = 3;</code>
     */
    int getResultCode();
  }
  /**
   * Protobuf type {@code carkot.UploadResult}
   */
  public  static final class UploadResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:carkot.UploadResult)
      UploadResultOrBuilder {
    // Use UploadResult.newBuilder() to construct.
    private UploadResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private UploadResult() {
      stdOut_ = "";
      stdErr_ = "";
      resultCode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UploadResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              stdOut_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              stdErr_ = s;
              break;
            }
            case 24: {

              resultCode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Carkot.internal_static_carkot_UploadResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Carkot.internal_static_carkot_UploadResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Carkot.UploadResult.class, proto.Carkot.UploadResult.Builder.class);
    }

    public static final int STDOUT_FIELD_NUMBER = 1;
    private volatile java.lang.Object stdOut_;
    /**
     * <code>optional string stdOut = 1;</code>
     */
    public java.lang.String getStdOut() {
      java.lang.Object ref = stdOut_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stdOut_ = s;
        return s;
      }
    }
    /**
     * <code>optional string stdOut = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStdOutBytes() {
      java.lang.Object ref = stdOut_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stdOut_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STDERR_FIELD_NUMBER = 2;
    private volatile java.lang.Object stdErr_;
    /**
     * <code>optional string stdErr = 2;</code>
     */
    public java.lang.String getStdErr() {
      java.lang.Object ref = stdErr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stdErr_ = s;
        return s;
      }
    }
    /**
     * <code>optional string stdErr = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStdErrBytes() {
      java.lang.Object ref = stdErr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stdErr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESULTCODE_FIELD_NUMBER = 3;
    private int resultCode_;
    /**
     * <code>optional int32 resultCode = 3;</code>
     */
    public int getResultCode() {
      return resultCode_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStdOutBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, stdOut_);
      }
      if (!getStdErrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, stdErr_);
      }
      if (resultCode_ != 0) {
        output.writeInt32(3, resultCode_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStdOutBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, stdOut_);
      }
      if (!getStdErrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, stdErr_);
      }
      if (resultCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, resultCode_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static proto.Carkot.UploadResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.UploadResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.UploadResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.UploadResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.UploadResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.UploadResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.UploadResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.Carkot.UploadResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.UploadResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.UploadResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.Carkot.UploadResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code carkot.UploadResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:carkot.UploadResult)
        proto.Carkot.UploadResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Carkot.internal_static_carkot_UploadResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Carkot.internal_static_carkot_UploadResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Carkot.UploadResult.class, proto.Carkot.UploadResult.Builder.class);
      }

      // Construct using proto.Carkot.UploadResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        stdOut_ = "";

        stdErr_ = "";

        resultCode_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Carkot.internal_static_carkot_UploadResult_descriptor;
      }

      public proto.Carkot.UploadResult getDefaultInstanceForType() {
        return proto.Carkot.UploadResult.getDefaultInstance();
      }

      public proto.Carkot.UploadResult build() {
        proto.Carkot.UploadResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Carkot.UploadResult buildPartial() {
        proto.Carkot.UploadResult result = new proto.Carkot.UploadResult(this);
        result.stdOut_ = stdOut_;
        result.stdErr_ = stdErr_;
        result.resultCode_ = resultCode_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Carkot.UploadResult) {
          return mergeFrom((proto.Carkot.UploadResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Carkot.UploadResult other) {
        if (other == proto.Carkot.UploadResult.getDefaultInstance()) return this;
        if (!other.getStdOut().isEmpty()) {
          stdOut_ = other.stdOut_;
          onChanged();
        }
        if (!other.getStdErr().isEmpty()) {
          stdErr_ = other.stdErr_;
          onChanged();
        }
        if (other.getResultCode() != 0) {
          setResultCode(other.getResultCode());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Carkot.UploadResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Carkot.UploadResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object stdOut_ = "";
      /**
       * <code>optional string stdOut = 1;</code>
       */
      public java.lang.String getStdOut() {
        java.lang.Object ref = stdOut_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdOut_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stdOut = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStdOutBytes() {
        java.lang.Object ref = stdOut_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdOut_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stdOut = 1;</code>
       */
      public Builder setStdOut(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stdOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stdOut = 1;</code>
       */
      public Builder clearStdOut() {
        
        stdOut_ = getDefaultInstance().getStdOut();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stdOut = 1;</code>
       */
      public Builder setStdOutBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stdOut_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stdErr_ = "";
      /**
       * <code>optional string stdErr = 2;</code>
       */
      public java.lang.String getStdErr() {
        java.lang.Object ref = stdErr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stdErr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stdErr = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStdErrBytes() {
        java.lang.Object ref = stdErr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stdErr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stdErr = 2;</code>
       */
      public Builder setStdErr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stdErr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stdErr = 2;</code>
       */
      public Builder clearStdErr() {
        
        stdErr_ = getDefaultInstance().getStdErr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stdErr = 2;</code>
       */
      public Builder setStdErrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stdErr_ = value;
        onChanged();
        return this;
      }

      private int resultCode_ ;
      /**
       * <code>optional int32 resultCode = 3;</code>
       */
      public int getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional int32 resultCode = 3;</code>
       */
      public Builder setResultCode(int value) {
        
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 resultCode = 3;</code>
       */
      public Builder clearResultCode() {
        
        resultCode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:carkot.UploadResult)
    }

    // @@protoc_insertion_point(class_scope:carkot.UploadResult)
    private static final proto.Carkot.UploadResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.Carkot.UploadResult();
    }

    public static proto.Carkot.UploadResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UploadResult>
        PARSER = new com.google.protobuf.AbstractParser<UploadResult>() {
      public UploadResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UploadResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UploadResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UploadResult> getParserForType() {
      return PARSER;
    }

    public proto.Carkot.UploadResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:carkot.LogMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string source = 1;</code>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 1;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>optional bytes message = 2;</code>
     */
    com.google.protobuf.ByteString getMessage();
  }
  /**
   * Protobuf type {@code carkot.LogMessage}
   */
  public  static final class LogMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:carkot.LogMessage)
      LogMessageOrBuilder {
    // Use LogMessage.newBuilder() to construct.
    private LogMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LogMessage() {
      source_ = "";
      message_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LogMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 18: {

              message_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.Carkot.internal_static_carkot_LogMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.Carkot.internal_static_carkot_LogMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.Carkot.LogMessage.class, proto.Carkot.LogMessage.Builder.class);
    }

    public static final int SOURCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 1;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString message_;
    /**
     * <code>optional bytes message = 2;</code>
     */
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, source_);
      }
      if (!message_.isEmpty()) {
        output.writeBytes(2, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, source_);
      }
      if (!message_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static proto.Carkot.LogMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.LogMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.LogMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.Carkot.LogMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.Carkot.LogMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.LogMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.LogMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.Carkot.LogMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.Carkot.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.Carkot.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.Carkot.LogMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code carkot.LogMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:carkot.LogMessage)
        proto.Carkot.LogMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.Carkot.internal_static_carkot_LogMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.Carkot.internal_static_carkot_LogMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.Carkot.LogMessage.class, proto.Carkot.LogMessage.Builder.class);
      }

      // Construct using proto.Carkot.LogMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        source_ = "";

        message_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.Carkot.internal_static_carkot_LogMessage_descriptor;
      }

      public proto.Carkot.LogMessage getDefaultInstanceForType() {
        return proto.Carkot.LogMessage.getDefaultInstance();
      }

      public proto.Carkot.LogMessage build() {
        proto.Carkot.LogMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.Carkot.LogMessage buildPartial() {
        proto.Carkot.LogMessage result = new proto.Carkot.LogMessage(this);
        result.source_ = source_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.Carkot.LogMessage) {
          return mergeFrom((proto.Carkot.LogMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.Carkot.LogMessage other) {
        if (other == proto.Carkot.LogMessage.getDefaultInstance()) return this;
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (other.getMessage() != com.google.protobuf.ByteString.EMPTY) {
          setMessage(other.getMessage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.Carkot.LogMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.Carkot.LogMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 1;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes message = 2;</code>
       */
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      /**
       * <code>optional bytes message = 2;</code>
       */
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes message = 2;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:carkot.LogMessage)
    }

    // @@protoc_insertion_point(class_scope:carkot.LogMessage)
    private static final proto.Carkot.LogMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.Carkot.LogMessage();
    }

    public static proto.Carkot.LogMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogMessage>
        PARSER = new com.google.protobuf.AbstractParser<LogMessage>() {
      public LogMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LogMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogMessage> getParserForType() {
      return PARSER;
    }

    public proto.Carkot.LogMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_carkot_Upload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_carkot_Upload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_carkot_Upload_Method_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_carkot_Upload_Method_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_carkot_UploadResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_carkot_UploadResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_carkot_LogMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_carkot_LogMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014carkot.proto\022\006carkot\"\316\001\n\006Upload\022\014\n\004dat" +
      "a\030\001 \001(\014\022\014\n\004base\030\002 \001(\t\022%\n\006method\030\003 \001(\0132\025." +
      "carkot.Upload.Method\032\200\001\n\006Method\022(\n\004type\030" +
      "\001 \001(\0162\032.carkot.Upload.Method.TYPE\022\014\n\004por" +
      "t\030\002 \001(\t\022\016\n\006device\030\003 \001(\t\022\021\n\targuments\030\004 \003" +
      "(\t\"\033\n\004TYPE\022\007\n\003DFU\020\000\022\n\n\006STLINK\020\001\"B\n\014Uploa" +
      "dResult\022\016\n\006stdOut\030\001 \001(\t\022\016\n\006stdErr\030\002 \001(\t\022" +
      "\022\n\nresultCode\030\003 \001(\005\"-\n\nLogMessage\022\016\n\006sou" +
      "rce\030\001 \001(\t\022\017\n\007message\030\002 \001(\014B\017\n\005protoB\006Car" +
      "kotb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_carkot_Upload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_carkot_Upload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_carkot_Upload_descriptor,
        new java.lang.String[] { "Data", "Base", "Method", });
    internal_static_carkot_Upload_Method_descriptor =
      internal_static_carkot_Upload_descriptor.getNestedTypes().get(0);
    internal_static_carkot_Upload_Method_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_carkot_Upload_Method_descriptor,
        new java.lang.String[] { "Type", "Port", "Device", "Arguments", });
    internal_static_carkot_UploadResult_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_carkot_UploadResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_carkot_UploadResult_descriptor,
        new java.lang.String[] { "StdOut", "StdErr", "ResultCode", });
    internal_static_carkot_LogMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_carkot_LogMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_carkot_LogMessage_descriptor,
        new java.lang.String[] { "Source", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
